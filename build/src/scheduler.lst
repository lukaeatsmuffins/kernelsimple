GAS LISTING /tmp/cchX6Xge.s 			page 1


   1              		.file	"scheduler.cpp"
   2              		.option nopic
   3              		.option norelax
   4              		.attribute arch, "rv64i2p0_m2p0_a2p0"
   5              		.attribute unaligned_access, 0
   6              		.attribute stack_align, 16
   7              		.text
   8              	.Ltext0:
   9              		.section	.text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm,"axG",@progbits,_ZN14SleepingThread15
  10              		.align	2
  11              		.weak	_ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm
  13              	_ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:
  14              	.LFB12:
  15              		.file 1 "src/../h/scheduler.hpp"
   1:src/../h/scheduler.hpp **** //
   2:src/../h/scheduler.hpp **** // Created by marko on 20.4.22..
   3:src/../h/scheduler.hpp **** //
   4:src/../h/scheduler.hpp **** 
   5:src/../h/scheduler.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_SCHEDULER_HPP
   6:src/../h/scheduler.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_SCHEDULER_HPP
   7:src/../h/scheduler.hpp **** 
   8:src/../h/scheduler.hpp **** #include "list.hpp"
   9:src/../h/scheduler.hpp **** #include "print.hpp"
  10:src/../h/scheduler.hpp **** #include "../lib/hw.h"
  11:src/../h/scheduler.hpp **** 
  12:src/../h/scheduler.hpp **** class TCB;
  13:src/../h/scheduler.hpp **** 
  14:src/../h/scheduler.hpp **** typedef TCB* thread_t;
  15:src/../h/scheduler.hpp **** 
  16:src/../h/scheduler.hpp **** struct SleepingThread {
  17:src/../h/scheduler.hpp ****     thread_t tcb_;
  18:src/../h/scheduler.hpp ****     uint64 time_slices_left_;
  19:src/../h/scheduler.hpp ****     SleepingThread(TCB *tcb, uint64 time_slices_left) : tcb_(tcb), time_slices_left_(time_slices_le
  20:src/../h/scheduler.hpp **** 
  21:src/../h/scheduler.hpp ****     static bool _scheduler_rule(SleepingThread *prev, SleepingThread *curr, uint64& counter) {
  16              		.loc 1 21 17
  17              		.cfi_startproc
  18              	.LVL0:
  19 0000 130101FF 		addi	sp,sp,-16
  20              		.cfi_def_cfa_offset 16
  21 0004 23348100 		sd	s0,8(sp)
  22              		.cfi_offset 8, -8
  23 0008 13040101 		addi	s0,sp,16
  24              		.cfi_def_cfa 8, 0
  22:src/../h/scheduler.hpp ****         counter += prev->time_slices_left_;
  25              		.loc 1 22 9
  26              		.loc 1 22 26 is_stmt 0
  27 000c 03358500 		ld	a0,8(a0)
  28              	.LVL1:
  29              		.loc 1 22 17
  30 0010 83370600 		ld	a5,0(a2)
  31 0014 3305F500 		add	a0,a0,a5
  32 0018 2330A600 		sd	a0,0(a2)
  23:src/../h/scheduler.hpp ****         return counter >= curr->time_slices_left_;
  33              		.loc 1 23 9 is_stmt 1
  34              		.loc 1 23 33 is_stmt 0
  35 001c 83B78500 		ld	a5,8(a1)
GAS LISTING /tmp/cchX6Xge.s 			page 2


  36 0020 3335F500 		sltu	a0,a0,a5
  24:src/../h/scheduler.hpp ****     }
  37              		.loc 1 24 5
  38 0024 13451500 		xori	a0,a0,1
  39 0028 03348100 		ld	s0,8(sp)
  40              		.cfi_restore 8
  41              		.cfi_def_cfa 2, 16
  42 002c 13010101 		addi	sp,sp,16
  43              		.cfi_def_cfa_offset 0
  44 0030 67800000 		jr	ra
  45              		.cfi_endproc
  46              	.LFE12:
  48              		.text
  49              		.align	2
  51              	_Z41__static_initialization_and_destruction_0ii:
  52              	.LFB48:
  53              		.file 2 "src/scheduler.cpp"
   1:src/scheduler.cpp **** //
   2:src/scheduler.cpp **** // Created by marko on 20.4.22..
   3:src/scheduler.cpp **** //
   4:src/scheduler.cpp **** 
   5:src/scheduler.cpp **** #include "../h/scheduler.hpp"
   6:src/scheduler.cpp **** #include "../h/tcb.hpp"
   7:src/scheduler.cpp **** 
   8:src/scheduler.cpp **** List<TCB> Scheduler::readyThreadQueue;
   9:src/scheduler.cpp **** List<SleepingThread> Scheduler::sleepingThreadQueue;
  10:src/scheduler.cpp **** 
  11:src/scheduler.cpp **** TCB *Scheduler::get()
  12:src/scheduler.cpp **** {
  13:src/scheduler.cpp ****     return readyThreadQueue.removeFirst();
  14:src/scheduler.cpp **** }
  15:src/scheduler.cpp **** 
  16:src/scheduler.cpp **** void Scheduler::put(TCB *ccb)
  17:src/scheduler.cpp **** {
  18:src/scheduler.cpp ****     readyThreadQueue.addLast(ccb);
  19:src/scheduler.cpp **** }
  20:src/scheduler.cpp **** 
  21:src/scheduler.cpp **** void Scheduler::putToSleep(uint64 time_slices_left)
  22:src/scheduler.cpp **** {
  23:src/scheduler.cpp ****     thread_t t = TCB::running;
  24:src/scheduler.cpp ****     t->setSleeping(true);
  25:src/scheduler.cpp ****     // TODO: Do not add last, add where appropriate.
  26:src/scheduler.cpp ****     sleepingThreadQueue.addByRule(new SleepingThread(t, time_slices_left), SleepingThread::_schedul
  27:src/scheduler.cpp ****     TCB::yield();
  28:src/scheduler.cpp **** }
  29:src/scheduler.cpp **** 
  30:src/scheduler.cpp **** void Scheduler::maybeWakeThreads() {
  31:src/scheduler.cpp ****     // Every time this is called, we expect to have passed a single time_slice.
  32:src/scheduler.cpp **** 
  33:src/scheduler.cpp ****     SleepingThread *st = sleepingThreadQueue.peekFirst();
  34:src/scheduler.cpp ****     if (st) {
  35:src/scheduler.cpp ****         st->time_slices_left_--;
  36:src/scheduler.cpp ****         assert(st->time_slices_left_ >= 0, "Thread should already be out of sleep.");
  37:src/scheduler.cpp ****     }
  38:src/scheduler.cpp **** 
  39:src/scheduler.cpp ****     // After decrementing, check if the thread is ready to wake up.
  40:src/scheduler.cpp ****     while (st && st->time_slices_left_ == 0) {
GAS LISTING /tmp/cchX6Xge.s 			page 3


  41:src/scheduler.cpp ****         // If the first thread is ready to wake up, unsleep it and add it back
  42:src/scheduler.cpp ****         // to the ready queue. It will be called at some point.
  43:src/scheduler.cpp ****         sleepingThreadQueue.removeFirst();
  44:src/scheduler.cpp ****         st->tcb_->setSleeping(false);
  45:src/scheduler.cpp ****         readyThreadQueue.addLast(st->tcb_);
  46:src/scheduler.cpp **** 
  47:src/scheduler.cpp ****         // Delete the sleeping thread object we created.
  48:src/scheduler.cpp ****         delete st;
  49:src/scheduler.cpp **** 
  50:src/scheduler.cpp ****         st = sleepingThreadQueue.peekFirst();
  51:src/scheduler.cpp ****     }
  52:src/scheduler.cpp **** }...
  54              		.loc 2 52 1 is_stmt 1
  55              		.cfi_startproc
  56              	.LVL2:
  57 0000 130101FF 		addi	sp,sp,-16
  58              		.cfi_def_cfa_offset 16
  59 0004 23348100 		sd	s0,8(sp)
  60              		.cfi_offset 8, -8
  61 0008 13040101 		addi	s0,sp,16
  62              		.cfi_def_cfa 8, 0
  63              		.loc 2 52 1 is_stmt 0
  64 000c 93071000 		li	a5,1
  65 0010 6308F500 		beq	a0,a5,.L6
  66              	.L3:
  67 0014 03348100 		ld	s0,8(sp)
  68              		.cfi_remember_state
  69              		.cfi_restore 8
  70              		.cfi_def_cfa 2, 16
  71 0018 13010101 		addi	sp,sp,16
  72              		.cfi_def_cfa_offset 0
  73 001c 67800000 		jr	ra
  74              	.L6:
  75              		.cfi_restore_state
  76              		.loc 2 52 1 discriminator 1
  77 0020 B7070100 		li	a5,65536
  78 0024 9387F7FF 		addi	a5,a5,-1
  79 0028 E396F5FE 		bne	a1,a5,.L3
  80              	.LVL3:
  81              	.LBB37:
  82              	.LBB38:
  83              	.LBB39:
  84              		.file 3 "src/../h/list.hpp"
   1:src/../h/list.hpp **** #ifndef LIST_HPP
   2:src/../h/list.hpp **** #define LIST_HPP
   3:src/../h/list.hpp **** 
   4:src/../h/list.hpp **** #include "../lib/hw.h"
   5:src/../h/list.hpp **** 
   6:src/../h/list.hpp **** template<typename T>
   7:src/../h/list.hpp **** class List
   8:src/../h/list.hpp **** {
   9:src/../h/list.hpp **** private:
  10:src/../h/list.hpp ****     struct Elem
  11:src/../h/list.hpp ****     {
  12:src/../h/list.hpp ****         T *data;
  13:src/../h/list.hpp ****         Elem *next;
  14:src/../h/list.hpp **** 
GAS LISTING /tmp/cchX6Xge.s 			page 4


  15:src/../h/list.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  16:src/../h/list.hpp ****     };
  17:src/../h/list.hpp **** 
  18:src/../h/list.hpp ****     Elem *head, *tail;
  19:src/../h/list.hpp **** 
  20:src/../h/list.hpp **** public:
  21:src/../h/list.hpp ****     List() : head(0), tail(0) {}
  85              		.loc 3 21 29
  86 002c 97070000 		lla	a5,.LANCHOR0
  86      93870700 
  87 0034 23B00700 		sd	zero,0(a5)
  88 0038 23B40700 		sd	zero,8(a5)
  89              	.LVL4:
  90              	.LBE39:
  91              	.LBE38:
  92              	.LBE37:
  93              	.LBB40:
  94              	.LBB41:
  95              	.LBB42:
  96 003c 23B80700 		sd	zero,16(a5)
  97 0040 23BC0700 		sd	zero,24(a5)
  98              	.LBE42:
  99              	.LBE41:
 100              	.LBE40:
 101              		.loc 2 52 1
 102 0044 6FF01FFD 		j	.L3
 103              		.cfi_endproc
 104              	.LFE48:
 106              		.align	2
 107              		.globl	_ZN9Scheduler3getEv
 109              	_ZN9Scheduler3getEv:
 110              	.LFB27:
  12:src/scheduler.cpp **** {
 111              		.loc 2 12 1 is_stmt 1
 112              		.cfi_startproc
 113 0048 130101FE 		addi	sp,sp,-32
 114              		.cfi_def_cfa_offset 32
 115 004c 233C1100 		sd	ra,24(sp)
 116 0050 23388100 		sd	s0,16(sp)
 117 0054 23349100 		sd	s1,8(sp)
 118              		.cfi_offset 1, -8
 119              		.cfi_offset 8, -16
 120              		.cfi_offset 9, -24
 121 0058 13040102 		addi	s0,sp,32
 122              		.cfi_def_cfa 8, 0
  13:src/scheduler.cpp ****     return readyThreadQueue.removeFirst();
 123              		.loc 2 13 5
 124              	.LVL5:
 125              	.LBB43:
 126              	.LBB44:
  22:src/../h/list.hpp **** 
  23:src/../h/list.hpp ****     List(const List<T> &) = delete;
  24:src/../h/list.hpp **** 
  25:src/../h/list.hpp ****     List<T> &operator=(const List<T> &) = delete;
  26:src/../h/list.hpp **** 
  27:src/../h/list.hpp ****     void addFirst(T *data)
  28:src/../h/list.hpp ****     {
GAS LISTING /tmp/cchX6Xge.s 			page 5


  29:src/../h/list.hpp ****         Elem *elem = new Elem(data, head);
  30:src/../h/list.hpp ****         head = elem;
  31:src/../h/list.hpp ****         if (!tail) { tail = head; }
  32:src/../h/list.hpp ****     }
  33:src/../h/list.hpp **** 
  34:src/../h/list.hpp ****     void addLast(T *data)
  35:src/../h/list.hpp ****     {
  36:src/../h/list.hpp ****         Elem *elem = new Elem(data, 0);
  37:src/../h/list.hpp ****         if (tail)
  38:src/../h/list.hpp ****         {
  39:src/../h/list.hpp ****             tail->next = elem;
  40:src/../h/list.hpp ****             tail = elem;
  41:src/../h/list.hpp ****         } else
  42:src/../h/list.hpp ****         {
  43:src/../h/list.hpp ****             head = tail = elem;
  44:src/../h/list.hpp ****         }
  45:src/../h/list.hpp ****     }
  46:src/../h/list.hpp **** 
  47:src/../h/list.hpp ****     T *removeFirst()
  48:src/../h/list.hpp ****     {
  49:src/../h/list.hpp ****         if (!head) { return 0; }
 127              		.loc 3 49 14 is_stmt 0
 128 005c 97070000 		lla	a5,.LANCHOR0
 128      93870700 
 129 0064 03B50700 		ld	a0,0(a5)
 130              		.loc 3 49 9
 131 0068 63020504 		beq	a0,zero,.L10
 132              	.LVL6:
  50:src/../h/list.hpp **** 
  51:src/../h/list.hpp ****         Elem *elem = head;
  52:src/../h/list.hpp ****         head = head->next;
 133              		.loc 3 52 22
 134 006c 83378500 		ld	a5,8(a0)
 135              		.loc 3 52 9
 136 0070 17070000 		sd	a5,.LANCHOR0,a4
 136      2330F700 
  53:src/../h/list.hpp ****         if (!head) { tail = 0; }
 137              		.loc 3 53 9
 138 0078 63840702 		beq	a5,zero,.L12
 139              	.L9:
  54:src/../h/list.hpp **** 
  55:src/../h/list.hpp ****         T *ret = elem->data;
 140              		.loc 3 55 12
 141 007c 83340500 		ld	s1,0(a0)
 142              	.LVL7:
  56:src/../h/list.hpp ****         delete elem;
 143              		.loc 3 56 9
 144 0080 97000000 		call	_ZdlPv
 144      E7800000 
 145              	.LVL8:
 146              	.L7:
 147              	.LBE44:
 148              	.LBE43:
  14:src/scheduler.cpp **** }
 149              		.loc 2 14 1
 150 0088 13850400 		mv	a0,s1
 151 008c 83308101 		ld	ra,24(sp)
GAS LISTING /tmp/cchX6Xge.s 			page 6


 152              		.cfi_remember_state
 153              		.cfi_restore 1
 154 0090 03340101 		ld	s0,16(sp)
 155              		.cfi_restore 8
 156              		.cfi_def_cfa 2, 32
 157 0094 83348100 		ld	s1,8(sp)
 158              		.cfi_restore 9
 159 0098 13010102 		addi	sp,sp,32
 160              		.cfi_def_cfa_offset 0
 161 009c 67800000 		jr	ra
 162              	.LVL9:
 163              	.L12:
 164              		.cfi_restore_state
 165              	.LBB46:
 166              	.LBB45:
  53:src/../h/list.hpp **** 
 167              		.loc 3 53 22
 168 00a0 97070000 		sd	zero,.LANCHOR0+8,a5
 168      23B00700 
 169 00a8 6FF05FFD 		j	.L9
 170              	.LVL10:
 171              	.L10:
  49:src/../h/list.hpp **** 
 172              		.loc 3 49 29
 173 00ac 93040500 		mv	s1,a0
 174              	.LVL11:
 175              	.LBE45:
 176              	.LBE46:
  13:src/scheduler.cpp ****     return readyThreadQueue.removeFirst();
 177              		.loc 2 13 41
 178 00b0 6FF09FFD 		j	.L7
 179              		.cfi_endproc
 180              	.LFE27:
 182              		.align	2
 183              		.globl	_ZN9Scheduler3putEP3TCB
 185              	_ZN9Scheduler3putEP3TCB:
 186              	.LFB28:
  17:src/scheduler.cpp **** {
 187              		.loc 2 17 1 is_stmt 1
 188              		.cfi_startproc
 189              	.LVL12:
 190 00b4 130101FE 		addi	sp,sp,-32
 191              		.cfi_def_cfa_offset 32
 192 00b8 233C1100 		sd	ra,24(sp)
 193 00bc 23388100 		sd	s0,16(sp)
 194 00c0 23349100 		sd	s1,8(sp)
 195              		.cfi_offset 1, -8
 196              		.cfi_offset 8, -16
 197              		.cfi_offset 9, -24
 198 00c4 13040102 		addi	s0,sp,32
 199              		.cfi_def_cfa 8, 0
 200 00c8 93040500 		mv	s1,a0
  18:src/scheduler.cpp ****     readyThreadQueue.addLast(ccb);
 201              		.loc 2 18 5
 202              	.LVL13:
 203              	.LBB47:
 204              	.LBB48:
GAS LISTING /tmp/cchX6Xge.s 			page 7


  36:src/../h/list.hpp ****         if (tail)
 205              		.loc 3 36 22 is_stmt 0
 206 00cc 13050001 		li	a0,16
 207              	.LVL14:
 208 00d0 97000000 		call	_Znwm
 208      E7800000 
 209              	.LVL15:
 210              	.LBB49:
 211              	.LBB50:
  15:src/../h/list.hpp ****     };
 212              		.loc 3 15 58
 213 00d8 23309500 		sd	s1,0(a0)
 214 00dc 23340500 		sd	zero,8(a0)
 215              	.LVL16:
 216              	.LBE50:
 217              	.LBE49:
  37:src/../h/list.hpp ****         {
 218              		.loc 3 37 13
 219 00e0 97070000 		lla	a5,.LANCHOR0
 219      93870700 
 220 00e8 83B78700 		ld	a5,8(a5)
  37:src/../h/list.hpp ****         {
 221              		.loc 3 37 9
 222 00ec 63820702 		beq	a5,zero,.L14
  39:src/../h/list.hpp ****             tail = elem;
 223              		.loc 3 39 13
 224 00f0 23B4A700 		sd	a0,8(a5)
  40:src/../h/list.hpp ****         } else
 225              		.loc 3 40 13
 226 00f4 97070000 		sd	a0,.LANCHOR0+8,a5
 226      23B0A700 
 227              	.LVL17:
 228              	.L13:
 229              	.LBE48:
 230              	.LBE47:
  19:src/scheduler.cpp **** }
 231              		.loc 2 19 1
 232 00fc 83308101 		ld	ra,24(sp)
 233              		.cfi_remember_state
 234              		.cfi_restore 1
 235 0100 03340101 		ld	s0,16(sp)
 236              		.cfi_restore 8
 237              		.cfi_def_cfa 2, 32
 238 0104 83348100 		ld	s1,8(sp)
 239              		.cfi_restore 9
 240              	.LVL18:
 241 0108 13010102 		addi	sp,sp,32
 242              		.cfi_def_cfa_offset 0
 243 010c 67800000 		jr	ra
 244              	.LVL19:
 245              	.L14:
 246              		.cfi_restore_state
 247              	.LBB52:
 248              	.LBB51:
  43:src/../h/list.hpp ****         }
 249              		.loc 3 43 13
 250 0110 97070000 		lla	a5,.LANCHOR0
GAS LISTING /tmp/cchX6Xge.s 			page 8


 250      93870700 
 251 0118 23B4A700 		sd	a0,8(a5)
 252 011c 23B0A700 		sd	a0,0(a5)
 253              	.LVL20:
 254              	.LBE51:
 255              	.LBE52:
  19:src/scheduler.cpp **** }
 256              		.loc 2 19 1
 257 0120 6FF0DFFD 		j	.L13
 258              		.cfi_endproc
 259              	.LFE28:
 261              		.align	2
 262              		.globl	_ZN9Scheduler10putToSleepEm
 264              	_ZN9Scheduler10putToSleepEm:
 265              	.LFB29:
  22:src/scheduler.cpp **** {
 266              		.loc 2 22 1 is_stmt 1
 267              		.cfi_startproc
 268              	.LVL21:
 269 0124 130101FC 		addi	sp,sp,-64
 270              		.cfi_def_cfa_offset 64
 271 0128 233C1102 		sd	ra,56(sp)
 272 012c 23388102 		sd	s0,48(sp)
 273 0130 23349102 		sd	s1,40(sp)
 274 0134 23302103 		sd	s2,32(sp)
 275 0138 233C3101 		sd	s3,24(sp)
 276              		.cfi_offset 1, -8
 277              		.cfi_offset 8, -16
 278              		.cfi_offset 9, -24
 279              		.cfi_offset 18, -32
 280              		.cfi_offset 19, -40
 281 013c 13040104 		addi	s0,sp,64
 282              		.cfi_def_cfa 8, 0
 283 0140 93090500 		mv	s3,a0
  23:src/scheduler.cpp ****     thread_t t = TCB::running;
 284              		.loc 2 23 5
  23:src/scheduler.cpp ****     thread_t t = TCB::running;
 285              		.loc 2 23 14 is_stmt 0
 286 0144 97070000 		lla	a5,_ZN3TCB7runningE
 286      93870700 
 287 014c 83B40700 		ld	s1,0(a5)
 288              	.LVL22:
  24:src/scheduler.cpp ****     t->setSleeping(true);
 289              		.loc 2 24 5 is_stmt 1
 290              	.LBB63:
 291              	.LBB64:
 292              		.file 4 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
GAS LISTING /tmp/cchX6Xge.s 			page 9


  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished_; }
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void setFinished(bool value) { finished_ = value; }
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     void block() { blocked_ = true; }
  22:src/../h/tcb.hpp **** 
  23:src/../h/tcb.hpp ****     void unblock() { blocked_ = false; }
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp ****     bool isBlocked() { return blocked_; }
  26:src/../h/tcb.hpp **** 
  27:src/../h/tcb.hpp ****     void setSleeping(bool value) { sleeping_ = value; }
 293              		.loc 4 27 36
 294              		.loc 4 27 46 is_stmt 0
 295 0150 93071000 		li	a5,1
 296 0154 2389F402 		sb	a5,50(s1)
 297              	.LVL23:
 298              	.LBE64:
 299              	.LBE63:
  26:src/scheduler.cpp ****     sleepingThreadQueue.addByRule(new SleepingThread(t, time_slices_left), SleepingThread::_schedul
 300              		.loc 2 26 5 is_stmt 1
  26:src/scheduler.cpp ****     sleepingThreadQueue.addByRule(new SleepingThread(t, time_slices_left), SleepingThread::_schedul
 301              		.loc 2 26 73 is_stmt 0
 302 0158 13050001 		li	a0,16
 303              	.LVL24:
 304 015c 97000000 		call	_Znwm
 304      E7800000 
 305              	.LVL25:
 306 0164 13090500 		mv	s2,a0
 307              	.LVL26:
 308              	.LBB65:
 309              	.LBB66:
  19:src/../h/scheduler.hpp **** 
 310              		.loc 1 19 102
 311 0168 23309500 		sd	s1,0(a0)
 312 016c 23343501 		sd	s3,8(a0)
 313              	.LVL27:
 314 0170 233404FC 		sd	zero,-56(s0)
 315              	.LVL28:
 316              	.LBE66:
 317              	.LBE65:
 318              	.LBB67:
 319              	.LBB68:
  57:src/../h/list.hpp ****         return ret;
  58:src/../h/list.hpp ****     }
  59:src/../h/list.hpp **** 
  60:src/../h/list.hpp ****     T *peekFirst()
  61:src/../h/list.hpp ****     {
  62:src/../h/list.hpp ****         if (!head) { return 0; }
  63:src/../h/list.hpp ****         return head->data;
  64:src/../h/list.hpp ****     }
  65:src/../h/list.hpp **** 
GAS LISTING /tmp/cchX6Xge.s 			page 10


  66:src/../h/list.hpp ****     T *removeLast()
  67:src/../h/list.hpp ****     {
  68:src/../h/list.hpp ****         if (!head) { return 0; }
  69:src/../h/list.hpp **** 
  70:src/../h/list.hpp ****         Elem *prev = 0;
  71:src/../h/list.hpp ****         for (Elem *curr = head; curr && curr != tail; curr = curr->next)
  72:src/../h/list.hpp ****         {
  73:src/../h/list.hpp ****             prev = curr;
  74:src/../h/list.hpp ****         }
  75:src/../h/list.hpp **** 
  76:src/../h/list.hpp ****         Elem *elem = tail;
  77:src/../h/list.hpp ****         if (prev) { prev->next = 0; }
  78:src/../h/list.hpp ****         else { head = 0; }
  79:src/../h/list.hpp ****         tail = prev;
  80:src/../h/list.hpp **** 
  81:src/../h/list.hpp ****         T *ret = elem->data;
  82:src/../h/list.hpp ****         delete elem;
  83:src/../h/list.hpp ****         return ret;
  84:src/../h/list.hpp ****     }
  85:src/../h/list.hpp **** 
  86:src/../h/list.hpp ****     T *peekLast()
  87:src/../h/list.hpp ****     {
  88:src/../h/list.hpp ****         if (!tail) { return 0; }
  89:src/../h/list.hpp ****         return tail->data;
  90:src/../h/list.hpp ****     }
  91:src/../h/list.hpp **** 
  92:src/../h/list.hpp ****     // Rule defines ordering. rule(prev, curr) and rule(curr, next) should be true.
  93:src/../h/list.hpp ****     void addByRule(T *data, bool (*rule)(T *, T *, uint64&), uint64 counter) {
  94:src/../h/list.hpp ****         Elem* prev = nullptr, *curr = head;
 320              		.loc 3 94 32
 321 0174 97070000 		lla	a5,.LANCHOR0
 321      93870700 
 322 017c 83B40701 		ld	s1,16(a5)
 323              	.LVL29:
 324              		.loc 3 94 15
 325 0180 93090000 		li	s3,0
 326              	.LVL30:
 327              	.L19:
  95:src/../h/list.hpp ****         while (curr && !rule(curr->data, data, counter)) {
 328              		.loc 3 95 21
 329 0184 63840402 		beq	s1,zero,.L18
 330              		.loc 3 95 29
 331 0188 130684FC 		addi	a2,s0,-56
 332 018c 93050900 		mv	a1,s2
 333 0190 03B50400 		ld	a0,0(s1)
 334 0194 97000000 		call	_ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm
 334      E7800000 
 335              	.LVL31:
 336              		.loc 3 95 21
 337 019c 63180500 		bne	a0,zero,.L18
 338              	.LVL32:
  96:src/../h/list.hpp ****             prev = curr;
 339              		.loc 3 96 13
 340 01a0 93890400 		mv	s3,s1
  97:src/../h/list.hpp ****             curr = curr->next;
 341              		.loc 3 97 13
 342 01a4 83B48400 		ld	s1,8(s1)
GAS LISTING /tmp/cchX6Xge.s 			page 11


 343              	.LVL33:
 344 01a8 6FF0DFFD 		j	.L19
 345              	.L18:
  98:src/../h/list.hpp ****         }
  99:src/../h/list.hpp ****         Elem* elem = new Elem(data, curr);
 346              		.loc 3 99 22
 347 01ac 13050001 		li	a0,16
 348 01b0 97000000 		call	_Znwm
 348      E7800000 
 349              	.LVL34:
 350              	.LBB69:
 351              	.LBB70:
  15:src/../h/list.hpp ****     };
 352              		.loc 3 15 58
 353 01b8 23302501 		sd	s2,0(a0)
 354 01bc 23349500 		sd	s1,8(a0)
 355              	.LVL35:
 356              	.LBE70:
 357              	.LBE69:
 100:src/../h/list.hpp ****         if (prev) { prev->next = elem; }
 358              		.loc 3 100 9
 359 01c0 63880902 		beq	s3,zero,.L20
 360              		.loc 3 100 21
 361 01c4 23B4A900 		sd	a0,8(s3)
 362              	.L21:
 101:src/../h/list.hpp ****         else { head = elem; }
 102:src/../h/list.hpp ****         if (!curr) { tail = elem; }
 363              		.loc 3 102 9
 364 01c8 638A0402 		beq	s1,zero,.L24
 365              	.L22:
 366              	.LVL36:
 367              	.LBE68:
 368              	.LBE67:
  27:src/scheduler.cpp ****     TCB::yield();
 369              		.loc 2 27 5 is_stmt 1
  27:src/scheduler.cpp ****     TCB::yield();
 370              		.loc 2 27 15 is_stmt 0
 371 01cc 97000000 		call	_ZN3TCB5yieldEv
 371      E7800000 
 372              	.LVL37:
  28:src/scheduler.cpp **** }
 373              		.loc 2 28 1
 374 01d4 83308103 		ld	ra,56(sp)
 375              		.cfi_remember_state
 376              		.cfi_restore 1
 377 01d8 03340103 		ld	s0,48(sp)
 378              		.cfi_restore 8
 379              		.cfi_def_cfa 2, 64
 380 01dc 83348102 		ld	s1,40(sp)
 381              		.cfi_restore 9
 382 01e0 03390102 		ld	s2,32(sp)
 383              		.cfi_restore 18
 384 01e4 83398101 		ld	s3,24(sp)
 385              		.cfi_restore 19
 386 01e8 13010104 		addi	sp,sp,64
 387              		.cfi_def_cfa_offset 0
 388 01ec 67800000 		jr	ra
GAS LISTING /tmp/cchX6Xge.s 			page 12


 389              	.LVL38:
 390              	.L20:
 391              		.cfi_restore_state
 392              	.LBB72:
 393              	.LBB71:
 101:src/../h/list.hpp ****         else { head = elem; }
 394              		.loc 3 101 16
 395 01f0 97070000 		sd	a0,.LANCHOR0+16,a5
 395      23B0A700 
 396 01f8 6FF01FFD 		j	.L21
 397              	.L24:
 398              		.loc 3 102 22
 399 01fc 97070000 		sd	a0,.LANCHOR0+24,a5
 399      23B0A700 
 400 0204 6FF09FFC 		j	.L22
 401              	.LBE71:
 402              	.LBE72:
 403              		.cfi_endproc
 404              	.LFE29:
 406              		.align	2
 407              		.globl	_ZN9Scheduler16maybeWakeThreadsEv
 409              	_ZN9Scheduler16maybeWakeThreadsEv:
 410              	.LFB30:
  30:src/scheduler.cpp **** void Scheduler::maybeWakeThreads() {
 411              		.loc 2 30 36 is_stmt 1
 412              		.cfi_startproc
 413 0208 130101FE 		addi	sp,sp,-32
 414              		.cfi_def_cfa_offset 32
 415 020c 233C1100 		sd	ra,24(sp)
 416 0210 23388100 		sd	s0,16(sp)
 417 0214 23349100 		sd	s1,8(sp)
 418 0218 23302101 		sd	s2,0(sp)
 419              		.cfi_offset 1, -8
 420              		.cfi_offset 8, -16
 421              		.cfi_offset 9, -24
 422              		.cfi_offset 18, -32
 423 021c 13040102 		addi	s0,sp,32
 424              		.cfi_def_cfa 8, 0
  33:src/scheduler.cpp ****     SleepingThread *st = sleepingThreadQueue.peekFirst();
 425              		.loc 2 33 5
 426              	.LVL39:
 427              	.LBB86:
 428              	.LBB87:
  62:src/../h/list.hpp ****         return head->data;
 429              		.loc 3 62 14 is_stmt 0
 430 0220 97070000 		lla	a5,.LANCHOR0
 430      93870700 
 431 0228 83B40701 		ld	s1,16(a5)
  62:src/../h/list.hpp ****         return head->data;
 432              		.loc 3 62 9
 433 022c 638E0408 		beq	s1,zero,.L32
  63:src/../h/list.hpp ****     }
 434              		.loc 3 63 22
 435 0230 83B40400 		ld	s1,0(s1)
 436              	.LVL40:
 437              	.LBE87:
 438              	.LBE86:
GAS LISTING /tmp/cchX6Xge.s 			page 13


  34:src/scheduler.cpp ****     if (st) {
 439              		.loc 2 34 5 is_stmt 1
 440 0234 638A0408 		beq	s1,zero,.L32
  35:src/scheduler.cpp ****         st->time_slices_left_--;
 441              		.loc 2 35 9
  35:src/scheduler.cpp ****         st->time_slices_left_--;
 442              		.loc 2 35 13 is_stmt 0
 443 0238 83B78400 		ld	a5,8(s1)
  35:src/scheduler.cpp ****         st->time_slices_left_--;
 444              		.loc 2 35 30
 445 023c 9387F7FF 		addi	a5,a5,-1
 446 0240 23B4F400 		sd	a5,8(s1)
  36:src/scheduler.cpp ****         assert(st->time_slices_left_ >= 0, "Thread should already be out of sleep.");
 447              		.loc 2 36 9 is_stmt 1
  36:src/scheduler.cpp ****         assert(st->time_slices_left_ >= 0, "Thread should already be out of sleep.");
 448              		.loc 2 36 15 is_stmt 0
 449 0244 97050000 		lla	a1,.LC0
 449      93850500 
 450 024c 13051000 		li	a0,1
 451 0250 97000000 		call	_Z6assertbPKc
 451      E7800000 
 452              	.LVL41:
 453 0258 6F000007 		j	.L32
 454              	.LVL42:
 455              	.L34:
 456              	.LBB88:
 457              	.LBB89:
  53:src/../h/list.hpp **** 
 458              		.loc 3 53 22
 459 025c 97070000 		sd	zero,.LANCHOR0+24,a5
 459      23B00700 
 460              	.L29:
 461              	.LVL43:
  56:src/../h/list.hpp ****         return ret;
 462              		.loc 3 56 9
 463 0264 97000000 		call	_ZdlPv
 463      E7800000 
 464              	.LVL44:
 465              	.L28:
 466              	.LBE89:
 467              	.LBE88:
  44:src/scheduler.cpp ****         st->tcb_->setSleeping(false);
 468              		.loc 2 44 9 is_stmt 1
  44:src/scheduler.cpp ****         st->tcb_->setSleeping(false);
 469              		.loc 2 44 13 is_stmt 0
 470 026c 83B70400 		ld	a5,0(s1)
 471              	.LVL45:
 472              	.LBB91:
 473              	.LBB92:
 474              		.loc 4 27 36 is_stmt 1
 475              		.loc 4 27 46 is_stmt 0
 476 0270 23890702 		sb	zero,50(a5)
 477              	.LVL46:
 478              	.LBE92:
 479              	.LBE91:
  45:src/scheduler.cpp ****         readyThreadQueue.addLast(st->tcb_);
 480              		.loc 2 45 9 is_stmt 1
GAS LISTING /tmp/cchX6Xge.s 			page 14


  45:src/scheduler.cpp ****         readyThreadQueue.addLast(st->tcb_);
 481              		.loc 2 45 33 is_stmt 0
 482 0274 03B90400 		ld	s2,0(s1)
 483              	.LVL47:
 484              	.LBB93:
 485              	.LBB94:
  36:src/../h/list.hpp ****         if (tail)
 486              		.loc 3 36 22
 487 0278 13050001 		li	a0,16
 488 027c 97000000 		call	_Znwm
 488      E7800000 
 489              	.LVL48:
 490              	.LBB95:
 491              	.LBB96:
  15:src/../h/list.hpp ****     };
 492              		.loc 3 15 58
 493 0284 23302501 		sd	s2,0(a0)
 494 0288 23340500 		sd	zero,8(a0)
 495              	.LVL49:
 496              	.LBE96:
 497              	.LBE95:
  37:src/../h/list.hpp ****         {
 498              		.loc 3 37 13
 499 028c 97070000 		lla	a5,.LANCHOR0
 499      93870700 
 500 0294 83B78700 		ld	a5,8(a5)
  37:src/../h/list.hpp ****         {
 501              		.loc 3 37 9
 502 0298 63800706 		beq	a5,zero,.L30
  39:src/../h/list.hpp ****             tail = elem;
 503              		.loc 3 39 13
 504 029c 23B4A700 		sd	a0,8(a5)
  40:src/../h/list.hpp ****         } else
 505              		.loc 3 40 13
 506 02a0 97070000 		sd	a0,.LANCHOR0+8,a5
 506      23B0A700 
 507              	.L31:
 508              	.LVL50:
 509              	.LBE94:
 510              	.LBE93:
  48:src/scheduler.cpp ****         delete st;
 511              		.loc 2 48 9 is_stmt 1
  48:src/scheduler.cpp ****         delete st;
 512              		.loc 2 48 16 is_stmt 0
 513 02a8 13850400 		mv	a0,s1
 514              	.LVL51:
 515 02ac 97000000 		call	_ZdlPv
 515      E7800000 
 516              	.LVL52:
  50:src/scheduler.cpp ****         st = sleepingThreadQueue.peekFirst();
 517              		.loc 2 50 9 is_stmt 1
 518              	.LBB98:
 519              	.LBB99:
  62:src/../h/list.hpp ****         return head->data;
 520              		.loc 3 62 14 is_stmt 0
 521 02b4 97070000 		lla	a5,.LANCHOR0
 521      93870700 
GAS LISTING /tmp/cchX6Xge.s 			page 15


 522 02bc 83B70701 		ld	a5,16(a5)
  62:src/../h/list.hpp ****         return head->data;
 523              		.loc 3 62 9
 524 02c0 63860704 		beq	a5,zero,.L25
 525              	.LVL53:
  63:src/../h/list.hpp ****     }
 526              		.loc 3 63 22
 527 02c4 83B40700 		ld	s1,0(a5)
 528              	.LVL54:
 529              	.L32:
 530              	.LBE99:
 531              	.LBE98:
  40:src/scheduler.cpp ****     while (st && st->time_slices_left_ == 0) {
 532              		.loc 2 40 5 is_stmt 1
  40:src/scheduler.cpp ****     while (st && st->time_slices_left_ == 0) {
 533              		.loc 2 40 15 is_stmt 0
 534 02c8 63820404 		beq	s1,zero,.L25
  40:src/scheduler.cpp ****     while (st && st->time_slices_left_ == 0) {
 535              		.loc 2 40 22 discriminator 1
 536 02cc 83B78400 		ld	a5,8(s1)
  40:src/scheduler.cpp ****     while (st && st->time_slices_left_ == 0) {
 537              		.loc 2 40 15 discriminator 1
 538 02d0 639E0702 		bne	a5,zero,.L25
  43:src/scheduler.cpp ****         sleepingThreadQueue.removeFirst();
 539              		.loc 2 43 9 is_stmt 1
 540              	.LVL55:
 541              	.LBB100:
 542              	.LBB90:
  49:src/../h/list.hpp **** 
 543              		.loc 3 49 14 is_stmt 0
 544 02d4 97070000 		lla	a5,.LANCHOR0
 544      93870700 
 545 02dc 03B50701 		ld	a0,16(a5)
  49:src/../h/list.hpp **** 
 546              		.loc 3 49 9
 547 02e0 E30605F8 		beq	a0,zero,.L28
 548              	.LVL56:
  52:src/../h/list.hpp ****         if (!head) { tail = 0; }
 549              		.loc 3 52 22
 550 02e4 83378500 		ld	a5,8(a0)
  52:src/../h/list.hpp ****         if (!head) { tail = 0; }
 551              		.loc 3 52 9
 552 02e8 17070000 		sd	a5,.LANCHOR0+16,a4
 552      2330F700 
  53:src/../h/list.hpp **** 
 553              		.loc 3 53 9
 554 02f0 E39A07F6 		bne	a5,zero,.L29
 555 02f4 6FF09FF6 		j	.L34
 556              	.LVL57:
 557              	.L30:
 558              	.LBE90:
 559              	.LBE100:
 560              	.LBB101:
 561              	.LBB97:
  43:src/../h/list.hpp ****         }
 562              		.loc 3 43 13
 563 02f8 97070000 		lla	a5,.LANCHOR0
GAS LISTING /tmp/cchX6Xge.s 			page 16


 563      93870700 
 564 0300 23B4A700 		sd	a0,8(a5)
 565 0304 23B0A700 		sd	a0,0(a5)
 566 0308 6FF01FFA 		j	.L31
 567              	.LVL58:
 568              	.L25:
 569              	.LBE97:
 570              	.LBE101:
 571              		.loc 2 52 1
 572 030c 83308101 		ld	ra,24(sp)
 573              		.cfi_restore 1
 574 0310 03340101 		ld	s0,16(sp)
 575              		.cfi_restore 8
 576              		.cfi_def_cfa 2, 32
 577 0314 83348100 		ld	s1,8(sp)
 578              		.cfi_restore 9
 579              	.LVL59:
 580 0318 03390100 		ld	s2,0(sp)
 581              		.cfi_restore 18
 582 031c 13010102 		addi	sp,sp,32
 583              		.cfi_def_cfa_offset 0
 584 0320 67800000 		jr	ra
 585              		.cfi_endproc
 586              	.LFE30:
 588              		.align	2
 590              	_GLOBAL__sub_I__ZN9Scheduler16readyThreadQueueE:
 591              	.LFB49:
 592              		.loc 2 52 1 is_stmt 1
 593              		.cfi_startproc
 594 0324 130101FF 		addi	sp,sp,-16
 595              		.cfi_def_cfa_offset 16
 596 0328 23341100 		sd	ra,8(sp)
 597 032c 23308100 		sd	s0,0(sp)
 598              		.cfi_offset 1, -8
 599              		.cfi_offset 8, -16
 600 0330 13040101 		addi	s0,sp,16
 601              		.cfi_def_cfa 8, 0
 602              		.loc 2 52 1 is_stmt 0
 603 0334 B7050100 		li	a1,65536
 604 0338 9385F5FF 		addi	a1,a1,-1
 605 033c 13051000 		li	a0,1
 606 0340 97000000 		call	_Z41__static_initialization_and_destruction_0ii
 606      E7800000 
 607              	.LVL60:
 608 0348 83308100 		ld	ra,8(sp)
 609              		.cfi_restore 1
 610 034c 03340100 		ld	s0,0(sp)
 611              		.cfi_restore 8
 612              		.cfi_def_cfa 2, 16
 613 0350 13010101 		addi	sp,sp,16
 614              		.cfi_def_cfa_offset 0
 615 0354 67800000 		jr	ra
 616              		.cfi_endproc
 617              	.LFE49:
 619              		.section	.init_array,"aw"
 620              		.align	3
 621 0000 00000000 		.dword	_GLOBAL__sub_I__ZN9Scheduler16readyThreadQueueE
GAS LISTING /tmp/cchX6Xge.s 			page 17


 621      00000000 
 622              		.globl	_ZN9Scheduler19sleepingThreadQueueE
 623              		.globl	_ZN9Scheduler16readyThreadQueueE
 624              		.bss
 625              		.align	3
 626              		.set	.LANCHOR0,. + 0
 629              	_ZN9Scheduler16readyThreadQueueE:
 630 0000 00000000 		.zero	16
 630      00000000 
 630      00000000 
 630      00000000 
 633              	_ZN9Scheduler19sleepingThreadQueueE:
 634 0010 00000000 		.zero	16
 634      00000000 
 634      00000000 
 634      00000000 
 635              		.section	.rodata.str1.8,"aMS",@progbits,1
 636              		.align	3
 637              	.LC0:
 638 0000 54687265 		.string	"Thread should already be out of sleep."
 638      61642073 
 638      686F756C 
 638      6420616C 
 638      72656164 
 639              		.text
 640              	.Letext0:
 641              		.file 5 "src/../h/../lib/hw.h"
 642              		.file 6 "src/../h/print.hpp"
GAS LISTING /tmp/cchX6Xge.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 scheduler.cpp
     /tmp/cchX6Xge.s:13     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000000 _ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm
     /tmp/cchX6Xge.s:17     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000000 .L0 
     /tmp/cchX6Xge.s:19     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000000 .L0 
     /tmp/cchX6Xge.s:20     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000004 .L0 
     /tmp/cchX6Xge.s:22     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000008 .L0 
     /tmp/cchX6Xge.s:24     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:000000000000000c .L0 
     /tmp/cchX6Xge.s:26     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:000000000000000c .L0 
     /tmp/cchX6Xge.s:27     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:000000000000000c .L0 
     /tmp/cchX6Xge.s:30     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000010 .L0 
     /tmp/cchX6Xge.s:34     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:000000000000001c .L0 
     /tmp/cchX6Xge.s:35     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:000000000000001c .L0 
     /tmp/cchX6Xge.s:38     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000024 .L0 
     /tmp/cchX6Xge.s:40     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:000000000000002c .L0 
     /tmp/cchX6Xge.s:41     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:000000000000002c .L0 
     /tmp/cchX6Xge.s:43     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000030 .L0 
     /tmp/cchX6Xge.s:45     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000034 .L0 
     /tmp/cchX6Xge.s:51     .text:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/cchX6Xge.s:55     .text:0000000000000000 .L0 
     /tmp/cchX6Xge.s:57     .text:0000000000000000 .L0 
     /tmp/cchX6Xge.s:58     .text:0000000000000004 .L0 
     /tmp/cchX6Xge.s:60     .text:0000000000000008 .L0 
     /tmp/cchX6Xge.s:62     .text:000000000000000c .L0 
     /tmp/cchX6Xge.s:64     .text:000000000000000c .L0 
     /tmp/cchX6Xge.s:68     .text:0000000000000018 .L0 
     /tmp/cchX6Xge.s:69     .text:0000000000000018 .L0 
     /tmp/cchX6Xge.s:70     .text:0000000000000018 .L0 
     /tmp/cchX6Xge.s:72     .text:000000000000001c .L0 
     /tmp/cchX6Xge.s:75     .text:0000000000000020 .L0 
     /tmp/cchX6Xge.s:77     .text:0000000000000020 .L0 
     /tmp/cchX6Xge.s:86     .text:000000000000002c .L0 
     /tmp/cchX6Xge.s:102    .text:0000000000000044 .L0 
     /tmp/cchX6Xge.s:103    .text:0000000000000048 .L0 
     /tmp/cchX6Xge.s:109    .text:0000000000000048 _ZN9Scheduler3getEv
     /tmp/cchX6Xge.s:112    .text:0000000000000048 .L0 
     /tmp/cchX6Xge.s:113    .text:0000000000000048 .L0 
     /tmp/cchX6Xge.s:114    .text:000000000000004c .L0 
     /tmp/cchX6Xge.s:118    .text:0000000000000058 .L0 
     /tmp/cchX6Xge.s:119    .text:0000000000000058 .L0 
     /tmp/cchX6Xge.s:120    .text:0000000000000058 .L0 
     /tmp/cchX6Xge.s:122    .text:000000000000005c .L0 
     /tmp/cchX6Xge.s:127    .text:000000000000005c .L0 
     /tmp/cchX6Xge.s:128    .text:000000000000005c .L0 
     /tmp/cchX6Xge.s:131    .text:0000000000000068 .L0 
     /tmp/cchX6Xge.s:134    .text:000000000000006c .L0 
     /tmp/cchX6Xge.s:136    .text:0000000000000070 .L0 
     /tmp/cchX6Xge.s:138    .text:0000000000000078 .L0 
     /tmp/cchX6Xge.s:141    .text:000000000000007c .L0 
     /tmp/cchX6Xge.s:144    .text:0000000000000080 .L0 
     /tmp/cchX6Xge.s:150    .text:0000000000000088 .L0 
     /tmp/cchX6Xge.s:152    .text:0000000000000090 .L0 
     /tmp/cchX6Xge.s:153    .text:0000000000000090 .L0 
     /tmp/cchX6Xge.s:155    .text:0000000000000094 .L0 
     /tmp/cchX6Xge.s:156    .text:0000000000000094 .L0 
     /tmp/cchX6Xge.s:158    .text:0000000000000098 .L0 
     /tmp/cchX6Xge.s:160    .text:000000000000009c .L0 
GAS LISTING /tmp/cchX6Xge.s 			page 19


     /tmp/cchX6Xge.s:164    .text:00000000000000a0 .L0 
     /tmp/cchX6Xge.s:168    .text:00000000000000a0 .L0 
     /tmp/cchX6Xge.s:173    .text:00000000000000ac .L0 
     /tmp/cchX6Xge.s:178    .text:00000000000000b0 .L0 
     /tmp/cchX6Xge.s:179    .text:00000000000000b4 .L0 
     /tmp/cchX6Xge.s:185    .text:00000000000000b4 _ZN9Scheduler3putEP3TCB
     /tmp/cchX6Xge.s:188    .text:00000000000000b4 .L0 
     /tmp/cchX6Xge.s:190    .text:00000000000000b4 .L0 
     /tmp/cchX6Xge.s:191    .text:00000000000000b8 .L0 
     /tmp/cchX6Xge.s:195    .text:00000000000000c4 .L0 
     /tmp/cchX6Xge.s:196    .text:00000000000000c4 .L0 
     /tmp/cchX6Xge.s:197    .text:00000000000000c4 .L0 
     /tmp/cchX6Xge.s:199    .text:00000000000000c8 .L0 
     /tmp/cchX6Xge.s:205    .text:00000000000000cc .L0 
     /tmp/cchX6Xge.s:206    .text:00000000000000cc .L0 
     /tmp/cchX6Xge.s:213    .text:00000000000000d8 .L0 
     /tmp/cchX6Xge.s:219    .text:00000000000000e0 .L0 
     /tmp/cchX6Xge.s:222    .text:00000000000000ec .L0 
     /tmp/cchX6Xge.s:224    .text:00000000000000f0 .L0 
     /tmp/cchX6Xge.s:226    .text:00000000000000f4 .L0 
     /tmp/cchX6Xge.s:232    .text:00000000000000fc .L0 
     /tmp/cchX6Xge.s:233    .text:0000000000000100 .L0 
     /tmp/cchX6Xge.s:234    .text:0000000000000100 .L0 
     /tmp/cchX6Xge.s:236    .text:0000000000000104 .L0 
     /tmp/cchX6Xge.s:237    .text:0000000000000104 .L0 
     /tmp/cchX6Xge.s:239    .text:0000000000000108 .L0 
     /tmp/cchX6Xge.s:242    .text:000000000000010c .L0 
     /tmp/cchX6Xge.s:246    .text:0000000000000110 .L0 
     /tmp/cchX6Xge.s:250    .text:0000000000000110 .L0 
     /tmp/cchX6Xge.s:257    .text:0000000000000120 .L0 
     /tmp/cchX6Xge.s:258    .text:0000000000000124 .L0 
     /tmp/cchX6Xge.s:264    .text:0000000000000124 _ZN9Scheduler10putToSleepEm
     /tmp/cchX6Xge.s:267    .text:0000000000000124 .L0 
     /tmp/cchX6Xge.s:269    .text:0000000000000124 .L0 
     /tmp/cchX6Xge.s:270    .text:0000000000000128 .L0 
     /tmp/cchX6Xge.s:276    .text:000000000000013c .L0 
     /tmp/cchX6Xge.s:277    .text:000000000000013c .L0 
     /tmp/cchX6Xge.s:278    .text:000000000000013c .L0 
     /tmp/cchX6Xge.s:279    .text:000000000000013c .L0 
     /tmp/cchX6Xge.s:280    .text:000000000000013c .L0 
     /tmp/cchX6Xge.s:282    .text:0000000000000140 .L0 
     /tmp/cchX6Xge.s:285    .text:0000000000000144 .L0 
     /tmp/cchX6Xge.s:286    .text:0000000000000144 .L0 
     /tmp/cchX6Xge.s:293    .text:0000000000000150 .L0 
     /tmp/cchX6Xge.s:294    .text:0000000000000150 .L0 
     /tmp/cchX6Xge.s:295    .text:0000000000000150 .L0 
     /tmp/cchX6Xge.s:301    .text:0000000000000158 .L0 
     /tmp/cchX6Xge.s:302    .text:0000000000000158 .L0 
     /tmp/cchX6Xge.s:311    .text:0000000000000168 .L0 
     /tmp/cchX6Xge.s:321    .text:0000000000000174 .L0 
     /tmp/cchX6Xge.s:325    .text:0000000000000180 .L0 
     /tmp/cchX6Xge.s:329    .text:0000000000000184 .L0 
     /tmp/cchX6Xge.s:331    .text:0000000000000188 .L0 
     /tmp/cchX6Xge.s:337    .text:000000000000019c .L0 
     /tmp/cchX6Xge.s:340    .text:00000000000001a0 .L0 
     /tmp/cchX6Xge.s:342    .text:00000000000001a4 .L0 
     /tmp/cchX6Xge.s:347    .text:00000000000001ac .L0 
GAS LISTING /tmp/cchX6Xge.s 			page 20


     /tmp/cchX6Xge.s:353    .text:00000000000001b8 .L0 
     /tmp/cchX6Xge.s:359    .text:00000000000001c0 .L0 
     /tmp/cchX6Xge.s:361    .text:00000000000001c4 .L0 
     /tmp/cchX6Xge.s:364    .text:00000000000001c8 .L0 
     /tmp/cchX6Xge.s:370    .text:00000000000001cc .L0 
     /tmp/cchX6Xge.s:371    .text:00000000000001cc .L0 
     /tmp/cchX6Xge.s:374    .text:00000000000001d4 .L0 
     /tmp/cchX6Xge.s:375    .text:00000000000001d8 .L0 
     /tmp/cchX6Xge.s:376    .text:00000000000001d8 .L0 
     /tmp/cchX6Xge.s:378    .text:00000000000001dc .L0 
     /tmp/cchX6Xge.s:379    .text:00000000000001dc .L0 
     /tmp/cchX6Xge.s:381    .text:00000000000001e0 .L0 
     /tmp/cchX6Xge.s:383    .text:00000000000001e4 .L0 
     /tmp/cchX6Xge.s:385    .text:00000000000001e8 .L0 
     /tmp/cchX6Xge.s:387    .text:00000000000001ec .L0 
     /tmp/cchX6Xge.s:391    .text:00000000000001f0 .L0 
     /tmp/cchX6Xge.s:395    .text:00000000000001f0 .L0 
     /tmp/cchX6Xge.s:399    .text:00000000000001fc .L0 
     /tmp/cchX6Xge.s:403    .text:0000000000000208 .L0 
     /tmp/cchX6Xge.s:409    .text:0000000000000208 _ZN9Scheduler16maybeWakeThreadsEv
     /tmp/cchX6Xge.s:412    .text:0000000000000208 .L0 
     /tmp/cchX6Xge.s:413    .text:0000000000000208 .L0 
     /tmp/cchX6Xge.s:414    .text:000000000000020c .L0 
     /tmp/cchX6Xge.s:419    .text:000000000000021c .L0 
     /tmp/cchX6Xge.s:420    .text:000000000000021c .L0 
     /tmp/cchX6Xge.s:421    .text:000000000000021c .L0 
     /tmp/cchX6Xge.s:422    .text:000000000000021c .L0 
     /tmp/cchX6Xge.s:424    .text:0000000000000220 .L0 
     /tmp/cchX6Xge.s:429    .text:0000000000000220 .L0 
     /tmp/cchX6Xge.s:430    .text:0000000000000220 .L0 
     /tmp/cchX6Xge.s:433    .text:000000000000022c .L0 
     /tmp/cchX6Xge.s:435    .text:0000000000000230 .L0 
     /tmp/cchX6Xge.s:440    .text:0000000000000234 .L0 
     /tmp/cchX6Xge.s:442    .text:0000000000000238 .L0 
     /tmp/cchX6Xge.s:443    .text:0000000000000238 .L0 
     /tmp/cchX6Xge.s:445    .text:000000000000023c .L0 
     /tmp/cchX6Xge.s:448    .text:0000000000000244 .L0 
     /tmp/cchX6Xge.s:449    .text:0000000000000244 .L0 
     /tmp/cchX6Xge.s:459    .text:000000000000025c .L0 
     /tmp/cchX6Xge.s:463    .text:0000000000000264 .L0 
     /tmp/cchX6Xge.s:469    .text:000000000000026c .L0 
     /tmp/cchX6Xge.s:470    .text:000000000000026c .L0 
     /tmp/cchX6Xge.s:475    .text:0000000000000270 .L0 
     /tmp/cchX6Xge.s:476    .text:0000000000000270 .L0 
     /tmp/cchX6Xge.s:481    .text:0000000000000274 .L0 
     /tmp/cchX6Xge.s:482    .text:0000000000000274 .L0 
     /tmp/cchX6Xge.s:487    .text:0000000000000278 .L0 
     /tmp/cchX6Xge.s:493    .text:0000000000000284 .L0 
     /tmp/cchX6Xge.s:499    .text:000000000000028c .L0 
     /tmp/cchX6Xge.s:502    .text:0000000000000298 .L0 
     /tmp/cchX6Xge.s:504    .text:000000000000029c .L0 
     /tmp/cchX6Xge.s:506    .text:00000000000002a0 .L0 
     /tmp/cchX6Xge.s:512    .text:00000000000002a8 .L0 
     /tmp/cchX6Xge.s:513    .text:00000000000002a8 .L0 
     /tmp/cchX6Xge.s:520    .text:00000000000002b4 .L0 
     /tmp/cchX6Xge.s:521    .text:00000000000002b4 .L0 
     /tmp/cchX6Xge.s:524    .text:00000000000002c0 .L0 
GAS LISTING /tmp/cchX6Xge.s 			page 21


     /tmp/cchX6Xge.s:527    .text:00000000000002c4 .L0 
     /tmp/cchX6Xge.s:533    .text:00000000000002c8 .L0 
     /tmp/cchX6Xge.s:534    .text:00000000000002c8 .L0 
     /tmp/cchX6Xge.s:536    .text:00000000000002cc .L0 
     /tmp/cchX6Xge.s:538    .text:00000000000002d0 .L0 
     /tmp/cchX6Xge.s:543    .text:00000000000002d4 .L0 
     /tmp/cchX6Xge.s:544    .text:00000000000002d4 .L0 
     /tmp/cchX6Xge.s:547    .text:00000000000002e0 .L0 
     /tmp/cchX6Xge.s:550    .text:00000000000002e4 .L0 
     /tmp/cchX6Xge.s:552    .text:00000000000002e8 .L0 
     /tmp/cchX6Xge.s:554    .text:00000000000002f0 .L0 
     /tmp/cchX6Xge.s:563    .text:00000000000002f8 .L0 
     /tmp/cchX6Xge.s:572    .text:000000000000030c .L0 
     /tmp/cchX6Xge.s:573    .text:0000000000000310 .L0 
     /tmp/cchX6Xge.s:575    .text:0000000000000314 .L0 
     /tmp/cchX6Xge.s:576    .text:0000000000000314 .L0 
     /tmp/cchX6Xge.s:578    .text:0000000000000318 .L0 
     /tmp/cchX6Xge.s:581    .text:000000000000031c .L0 
     /tmp/cchX6Xge.s:583    .text:0000000000000320 .L0 
     /tmp/cchX6Xge.s:585    .text:0000000000000324 .L0 
     /tmp/cchX6Xge.s:590    .text:0000000000000324 _GLOBAL__sub_I__ZN9Scheduler16readyThreadQueueE
     /tmp/cchX6Xge.s:593    .text:0000000000000324 .L0 
     /tmp/cchX6Xge.s:594    .text:0000000000000324 .L0 
     /tmp/cchX6Xge.s:595    .text:0000000000000328 .L0 
     /tmp/cchX6Xge.s:598    .text:0000000000000330 .L0 
     /tmp/cchX6Xge.s:599    .text:0000000000000330 .L0 
     /tmp/cchX6Xge.s:601    .text:0000000000000334 .L0 
     /tmp/cchX6Xge.s:603    .text:0000000000000334 .L0 
     /tmp/cchX6Xge.s:609    .text:000000000000034c .L0 
     /tmp/cchX6Xge.s:611    .text:0000000000000350 .L0 
     /tmp/cchX6Xge.s:612    .text:0000000000000350 .L0 
     /tmp/cchX6Xge.s:614    .text:0000000000000354 .L0 
     /tmp/cchX6Xge.s:616    .text:0000000000000358 .L0 
     /tmp/cchX6Xge.s:633    .bss:0000000000000010 _ZN9Scheduler19sleepingThreadQueueE
     /tmp/cchX6Xge.s:629    .bss:0000000000000000 _ZN9Scheduler16readyThreadQueueE
     /tmp/cchX6Xge.s:626    .bss:0000000000000000 .LANCHOR0
     /tmp/cchX6Xge.s:48     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000034 .L0 
     /tmp/cchX6Xge.s:643    .text:0000000000000358 .L0 
     /tmp/cchX6Xge.s:86     .text:000000000000002c .L0 
     /tmp/cchX6Xge.s:128    .text:000000000000005c .L0 
     /tmp/cchX6Xge.s:136    .text:0000000000000070 .L0 
     /tmp/cchX6Xge.s:168    .text:00000000000000a0 .L0 
     /tmp/cchX6Xge.s:219    .text:00000000000000e0 .L0 
     /tmp/cchX6Xge.s:226    .text:00000000000000f4 .L0 
     /tmp/cchX6Xge.s:250    .text:0000000000000110 .L0 
     /tmp/cchX6Xge.s:286    .text:0000000000000144 .L0 
     /tmp/cchX6Xge.s:321    .text:0000000000000174 .L0 
     /tmp/cchX6Xge.s:395    .text:00000000000001f0 .L0 
     /tmp/cchX6Xge.s:399    .text:00000000000001fc .L0 
     /tmp/cchX6Xge.s:430    .text:0000000000000220 .L0 
     /tmp/cchX6Xge.s:637    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cchX6Xge.s:449    .text:0000000000000244 .L0 
     /tmp/cchX6Xge.s:459    .text:000000000000025c .L0 
     /tmp/cchX6Xge.s:499    .text:000000000000028c .L0 
     /tmp/cchX6Xge.s:506    .text:00000000000002a0 .L0 
     /tmp/cchX6Xge.s:521    .text:00000000000002b4 .L0 
     /tmp/cchX6Xge.s:544    .text:00000000000002d4 .L0 
GAS LISTING /tmp/cchX6Xge.s 			page 22


     /tmp/cchX6Xge.s:552    .text:00000000000002e8 .L0 
     /tmp/cchX6Xge.s:563    .text:00000000000002f8 .L0 
     /tmp/cchX6Xge.s:74     .text:0000000000000020 .L6
     /tmp/cchX6Xge.s:66     .text:0000000000000014 .L3
     /tmp/cchX6Xge.s:171    .text:00000000000000ac .L10
     /tmp/cchX6Xge.s:163    .text:00000000000000a0 .L12
     /tmp/cchX6Xge.s:139    .text:000000000000007c .L9
     /tmp/cchX6Xge.s:146    .text:0000000000000088 .L7
     /tmp/cchX6Xge.s:245    .text:0000000000000110 .L14
     /tmp/cchX6Xge.s:228    .text:00000000000000fc .L13
     /tmp/cchX6Xge.s:345    .text:00000000000001ac .L18
     /tmp/cchX6Xge.s:327    .text:0000000000000184 .L19
     /tmp/cchX6Xge.s:390    .text:00000000000001f0 .L20
     /tmp/cchX6Xge.s:397    .text:00000000000001fc .L24
     /tmp/cchX6Xge.s:362    .text:00000000000001c8 .L21
     /tmp/cchX6Xge.s:365    .text:00000000000001cc .L22
     /tmp/cchX6Xge.s:529    .text:00000000000002c8 .L32
     /tmp/cchX6Xge.s:557    .text:00000000000002f8 .L30
     /tmp/cchX6Xge.s:568    .text:000000000000030c .L25
     /tmp/cchX6Xge.s:465    .text:000000000000026c .L28
     /tmp/cchX6Xge.s:460    .text:0000000000000264 .L29
     /tmp/cchX6Xge.s:455    .text:000000000000025c .L34
     /tmp/cchX6Xge.s:507    .text:00000000000002a8 .L31
     /tmp/cchX6Xge.s:2493   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cchX6Xge.s:4331   .debug_str:00000000000005a2 .LASF137
     /tmp/cchX6Xge.s:4449   .debug_str:0000000000000a76 .LASF138
     /tmp/cchX6Xge.s:4307   .debug_str:00000000000004d1 .LASF139
     /tmp/cchX6Xge.s:4133   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cchX6Xge.s:4171   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cchX6Xge.s:4341   .debug_str:00000000000006b5 .LASF0
     /tmp/cchX6Xge.s:4357   .debug_str:0000000000000736 .LASF1
     /tmp/cchX6Xge.s:4321   .debug_str:0000000000000571 .LASF2
     /tmp/cchX6Xge.s:4281   .debug_str:000000000000040c .LASF4
     /tmp/cchX6Xge.s:4403   .debug_str:00000000000008a3 .LASF3
     /tmp/cchX6Xge.s:4199   .debug_str:0000000000000101 .LASF5
     /tmp/cchX6Xge.s:4359   .debug_str:0000000000000749 .LASF6
     /tmp/cchX6Xge.s:4339   .debug_str:00000000000006a2 .LASF7
     /tmp/cchX6Xge.s:4431   .debug_str:00000000000009af .LASF8
     /tmp/cchX6Xge.s:4261   .debug_str:0000000000000343 .LASF9
     /tmp/cchX6Xge.s:4373   .debug_str:00000000000007db .LASF10
     /tmp/cchX6Xge.s:4423   .debug_str:000000000000097d .LASF11
     /tmp/cchX6Xge.s:4203   .debug_str:0000000000000110 .LASF12
     /tmp/cchX6Xge.s:4179   .debug_str:0000000000000022 .LASF13
     /tmp/cchX6Xge.s:4215   .debug_str:0000000000000189 .LASF14
     /tmp/cchX6Xge.s:4393   .debug_str:0000000000000877 .LASF15
     /tmp/cchX6Xge.s:4225   .debug_str:00000000000001e8 .LASF16
     /tmp/cchX6Xge.s:4173   .debug_str:0000000000000000 .LASF17
     /tmp/cchX6Xge.s:4187   .debug_str:0000000000000055 .LASF54
     /tmp/cchX6Xge.s:4241   .debug_str:000000000000028d .LASF18
     /tmp/cchX6Xge.s:4383   .debug_str:000000000000083c .LASF20
     /tmp/cchX6Xge.s:4361   .debug_str:000000000000075c .LASF26
     /tmp/cchX6Xge.s:4259   .debug_str:000000000000032c .LASF28
     /tmp/cchX6Xge.s:4323   .debug_str:000000000000057f .LASF19
     /tmp/cchX6Xge.s:4275   .debug_str:00000000000003c8 .LASF21
     /tmp/cchX6Xge.s:4291   .debug_str:0000000000000471 .LASF22
     /tmp/cchX6Xge.s:4257   .debug_str:000000000000031c .LASF23
     /tmp/cchX6Xge.s:4201   .debug_str:0000000000000108 .LASF24
GAS LISTING /tmp/cchX6Xge.s 			page 23


     /tmp/cchX6Xge.s:4263   .debug_str:0000000000000351 .LASF25
     /tmp/cchX6Xge.s:4185   .debug_str:000000000000004b .LASF27
     /tmp/cchX6Xge.s:4367   .debug_str:00000000000007ae .LASF29
     /tmp/cchX6Xge.s:4245   .debug_str:00000000000002b5 .LASF30
     /tmp/cchX6Xge.s:4251   .debug_str:00000000000002ef .LASF31
     /tmp/cchX6Xge.s:4335   .debug_str:0000000000000682 .LASF32
     /tmp/cchX6Xge.s:4273   .debug_str:00000000000003b2 .LASF33
     /tmp/cchX6Xge.s:4309   .debug_str:00000000000004e4 .LASF34
     /tmp/cchX6Xge.s:4195   .debug_str:00000000000000c4 .LASF35
     /tmp/cchX6Xge.s:4295   .debug_str:000000000000047c .LASF36
     /tmp/cchX6Xge.s:4355   .debug_str:0000000000000716 .LASF37
     /tmp/cchX6Xge.s:4385   .debug_str:0000000000000848 .LASF140
     /tmp/cchX6Xge.s:4395   .debug_str:000000000000088d .LASF72
     /tmp/cchX6Xge.s:4233   .debug_str:0000000000000230 .LASF74
     /tmp/cchX6Xge.s:4247   .debug_str:00000000000002c1 .LASF141
     /tmp/cchX6Xge.s:4337   .debug_str:000000000000068d .LASF67
     /tmp/cchX6Xge.s:4289   .debug_str:000000000000046c .LASF38
     /tmp/cchX6Xge.s:4415   .debug_str:0000000000000933 .LASF39
     /tmp/cchX6Xge.s:4347   .debug_str:00000000000006d5 .LASF40
     /tmp/cchX6Xge.s:4349   .debug_str:00000000000006db .LASF41
     /tmp/cchX6Xge.s:4351   .debug_str:00000000000006e3 .LASF42
     /tmp/cchX6Xge.s:4325   .debug_str:000000000000058b .LASF43
     /tmp/cchX6Xge.s:4177   .debug_str:0000000000000019 .LASF44
     /tmp/cchX6Xge.s:4345   .debug_str:00000000000006cb .LASF45
     /tmp/cchX6Xge.s:4313   .debug_str:0000000000000504 .LASF46
     /tmp/cchX6Xge.s:4267   .debug_str:000000000000037a .LASF48
     /tmp/cchX6Xge.s:4439   .debug_str:0000000000000a14 .LASF58
     /tmp/cchX6Xge.s:4277   .debug_str:00000000000003df .LASF60
     /tmp/cchX6Xge.s:4343   .debug_str:00000000000006c2 .LASF47
     /tmp/cchX6Xge.s:4311   .debug_str:00000000000004f1 .LASF49
     /tmp/cchX6Xge.s:4401   .debug_str:000000000000089e .LASF50
     /tmp/cchX6Xge.s:4207   .debug_str:000000000000014e .LASF51
     /tmp/cchX6Xge.s:4405   .debug_str:00000000000008b5 .LASF64
     /tmp/cchX6Xge.s:4301   .debug_str:00000000000004ad .LASF52
     /tmp/cchX6Xge.s:4271   .debug_str:00000000000003a7 .LASF53
     /tmp/cchX6Xge.s:4369   .debug_str:00000000000007c2 .LASF55
     /tmp/cchX6Xge.s:4409   .debug_str:00000000000008ee .LASF56
     /tmp/cchX6Xge.s:4435   .debug_str:00000000000009d9 .LASF57
     /tmp/cchX6Xge.s:4237   .debug_str:000000000000025c .LASF70
     /tmp/cchX6Xge.s:4175   .debug_str:0000000000000009 .LASF59
     /tmp/cchX6Xge.s:4205   .debug_str:0000000000000120 .LASF61
     /tmp/cchX6Xge.s:4253   .debug_str:0000000000000306 .LASF62
     /tmp/cchX6Xge.s:4371   .debug_str:00000000000007d1 .LASF63
     /tmp/cchX6Xge.s:4255   .debug_str:000000000000030b .LASF65
     /tmp/cchX6Xge.s:4269   .debug_str:0000000000000393 .LASF66
     /tmp/cchX6Xge.s:4239   .debug_str:0000000000000279 .LASF142
     /tmp/cchX6Xge.s:4213   .debug_str:0000000000000171 .LASF68
     /tmp/cchX6Xge.s:4441   .debug_str:0000000000000a22 .LASF69
     /tmp/cchX6Xge.s:4333   .debug_str:0000000000000666 .LASF71
     /tmp/cchX6Xge.s:4223   .debug_str:00000000000001d7 .LASF73
     /tmp/cchX6Xge.s:4451   .debug_str:0000000000000a88 .LASF75
     /tmp/cchX6Xge.s:4209   .debug_str:000000000000015d .LASF76
     /tmp/cchX6Xge.s:4425   .debug_str:000000000000098c .LASF77
     /tmp/cchX6Xge.s:4387   .debug_str:000000000000084d .LASF78
     /tmp/cchX6Xge.s:4457   .debug_str:0000000000000ad1 .LASF79
     /tmp/cchX6Xge.s:4189   .debug_str:000000000000005d .LASF80
     /tmp/cchX6Xge.s:4231   .debug_str:000000000000022b .LASF81
GAS LISTING /tmp/cchX6Xge.s 			page 24


     /tmp/cchX6Xge.s:4329   .debug_str:000000000000059d .LASF82
     /tmp/cchX6Xge.s:4279   .debug_str:0000000000000407 .LASF83
     /tmp/cchX6Xge.s:4429   .debug_str:000000000000099c .LASF84
     /tmp/cchX6Xge.s:4391   .debug_str:0000000000000860 .LASF85
     /tmp/cchX6Xge.s:4455   .debug_str:0000000000000ac7 .LASF104
     /tmp/cchX6Xge.s:4265   .debug_str:0000000000000363 .LASF105
     /tmp/cchX6Xge.s:4417   .debug_str:0000000000000938 .LASF86
     /tmp/cchX6Xge.s:4453   .debug_str:0000000000000aaa .LASF87
     /tmp/cchX6Xge.s:4327   .debug_str:0000000000000595 .LASF88
     /tmp/cchX6Xge.s:4235   .debug_str:0000000000000240 .LASF89
     /tmp/cchX6Xge.s:4421   .debug_str:0000000000000971 .LASF90
     /tmp/cchX6Xge.s:4381   .debug_str:000000000000081e .LASF91
     /tmp/cchX6Xge.s:4211   .debug_str:0000000000000167 .LASF92
     /tmp/cchX6Xge.s:4297   .debug_str:0000000000000489 .LASF93
     /tmp/cchX6Xge.s:4427   .debug_str:0000000000000991 .LASF94
     /tmp/cchX6Xge.s:4193   .debug_str:00000000000000a7 .LASF95
     /tmp/cchX6Xge.s:4299   .debug_str:00000000000004a4 .LASF96
     /tmp/cchX6Xge.s:4433   .debug_str:00000000000009bf .LASF97
     /tmp/cchX6Xge.s:4303   .debug_str:00000000000004b8 .LASF98
     /tmp/cchX6Xge.s:4411   .debug_str:00000000000008f3 .LASF99
     /tmp/cchX6Xge.s:4413   .debug_str:000000000000091e .LASF100
     /tmp/cchX6Xge.s:4283   .debug_str:0000000000000413 .LASF101
     /tmp/cchX6Xge.s:4315   .debug_str:0000000000000512 .LASF102
     /tmp/cchX6Xge.s:4243   .debug_str:0000000000000292 .LASF103
     /tmp/cchX6Xge.s:4285   .debug_str:000000000000043e .LASF106
     /tmp/cchX6Xge.s:4437   .debug_str:00000000000009eb .LASF107
     /tmp/cchX6Xge.s:4407   .debug_str:00000000000008c6 .LASF108
     /tmp/cchX6Xge.s:4365   .debug_str:0000000000000784 .LASF109
     /tmp/cchX6Xge.s:4229   .debug_str:0000000000000204 .LASF110
     /tmp/cchX6Xge.s:4353   .debug_str:00000000000006ed .LASF111
     /tmp/cchX6Xge.s:4249   .debug_str:00000000000002c9 .LASF112
     /tmp/cchX6Xge.s:4445   .debug_str:0000000000000a3a .LASF113
     /tmp/cchX6Xge.s:4319   .debug_str:0000000000000550 .LASF114
     /tmp/cchX6Xge.s:4197   .debug_str:00000000000000dd .LASF115
     /tmp/cchX6Xge.s:4419   .debug_str:0000000000000941 .LASF116
     /tmp/cchX6Xge.s:591    .text:0000000000000324 .LFB49
     /tmp/cchX6Xge.s:617    .text:0000000000000358 .LFE49
     /tmp/cchX6Xge.s:607    .text:0000000000000348 .LVL60
     /tmp/cchX6Xge.s:4377   .debug_str:00000000000007ef .LASF117
     /tmp/cchX6Xge.s:52     .text:0000000000000000 .LFB48
     /tmp/cchX6Xge.s:104    .text:0000000000000048 .LFE48
     /tmp/cchX6Xge.s:4305   .debug_str:00000000000004c2 .LASF118
     /tmp/cchX6Xge.s:4287   .debug_str:0000000000000461 .LASF119
     /tmp/cchX6Xge.s:81     .text:000000000000002c .LBB37
     /tmp/cchX6Xge.s:92     .text:000000000000003c .LBE37
     /tmp/cchX6Xge.s:3656   .debug_loc:0000000000000000 .LLST1
     /tmp/cchX6Xge.s:93     .text:000000000000003c .LBB40
     /tmp/cchX6Xge.s:100    .text:0000000000000044 .LBE40
     /tmp/cchX6Xge.s:4379   .debug_str:0000000000000819 .LASF120
     /tmp/cchX6Xge.s:4191   .debug_str:000000000000007c .LASF121
     /tmp/cchX6Xge.s:4221   .debug_str:00000000000001b8 .LASF122
     /tmp/cchX6Xge.s:4397   .debug_str:0000000000000893 .LASF123
     /tmp/cchX6Xge.s:4293   .debug_str:0000000000000477 .LASF124
     /tmp/cchX6Xge.s:4183   .debug_str:0000000000000043 .LASF125
     /tmp/cchX6Xge.s:4447   .debug_str:0000000000000a71 .LASF126
     /tmp/cchX6Xge.s:4375   .debug_str:00000000000007ea .LASF127
     /tmp/cchX6Xge.s:4317   .debug_str:0000000000000531 .LASF128
GAS LISTING /tmp/cchX6Xge.s 			page 25


     /tmp/cchX6Xge.s:4219   .debug_str:00000000000001a5 .LASF129
     /tmp/cchX6Xge.s:410    .text:0000000000000208 .LFB30
     /tmp/cchX6Xge.s:586    .text:0000000000000324 .LFE30
     /tmp/cchX6Xge.s:3665   .debug_loc:000000000000002c .LLST28
     /tmp/cchX6Xge.s:427    .text:0000000000000220 .LBB86
     /tmp/cchX6Xge.s:438    .text:0000000000000234 .LBE86
     /tmp/cchX6Xge.s:3681   .debug_loc:0000000000000076 .LLST29
     /tmp/cchX6Xge.s:456    .text:000000000000025c .LBB88
     /tmp/cchX6Xge.s:3690   .debug_loc:00000000000000a2 .LLST30
     /tmp/cchX6Xge.s:3705   .debug_loc:00000000000000ea .LLST31
     /tmp/cchX6Xge.s:3716   .debug_loc:0000000000000120 .LLST32
     /tmp/cchX6Xge.s:464    .text:000000000000026c .LVL44
     /tmp/cchX6Xge.s:472    .text:0000000000000270 .LBB91
     /tmp/cchX6Xge.s:479    .text:0000000000000274 .LBE91
     /tmp/cchX6Xge.s:3724   .debug_loc:0000000000000144 .LLST33
     /tmp/cchX6Xge.s:3732   .debug_loc:0000000000000168 .LLST34
     /tmp/cchX6Xge.s:484    .text:0000000000000278 .LBB93
     /tmp/cchX6Xge.s:3739   .debug_loc:000000000000018b .LLST35
     /tmp/cchX6Xge.s:3750   .debug_loc:00000000000001c1 .LLST36
     /tmp/cchX6Xge.s:3765   .debug_loc:0000000000000209 .LLST37
     /tmp/cchX6Xge.s:490    .text:0000000000000284 .LBB95
     /tmp/cchX6Xge.s:497    .text:000000000000028c .LBE95
     /tmp/cchX6Xge.s:3776   .debug_loc:000000000000023f .LLST38
     /tmp/cchX6Xge.s:3784   .debug_loc:0000000000000263 .LLST39
     /tmp/cchX6Xge.s:3791   .debug_loc:0000000000000286 .LLST40
     /tmp/cchX6Xge.s:489    .text:0000000000000284 .LVL48
     /tmp/cchX6Xge.s:518    .text:00000000000002b4 .LBB98
     /tmp/cchX6Xge.s:531    .text:00000000000002c8 .LBE98
     /tmp/cchX6Xge.s:3798   .debug_loc:00000000000002a9 .LLST41
     /tmp/cchX6Xge.s:452    .text:0000000000000258 .LVL41
     /tmp/cchX6Xge.s:516    .text:00000000000002b4 .LVL52
     /tmp/cchX6Xge.s:265    .text:0000000000000124 .LFB29
     /tmp/cchX6Xge.s:404    .text:0000000000000208 .LFE29
     /tmp/cchX6Xge.s:4181   .debug_str:0000000000000032 .LASF130
     /tmp/cchX6Xge.s:3807   .debug_loc:00000000000002d5 .LLST11
     /tmp/cchX6Xge.s:3825   .debug_loc:0000000000000321 .LLST12
     /tmp/cchX6Xge.s:290    .text:0000000000000150 .LBB63
     /tmp/cchX6Xge.s:299    .text:0000000000000158 .LBE63
     /tmp/cchX6Xge.s:3832   .debug_loc:0000000000000344 .LLST13
     /tmp/cchX6Xge.s:3840   .debug_loc:0000000000000368 .LLST14
     /tmp/cchX6Xge.s:308    .text:0000000000000168 .LBB65
     /tmp/cchX6Xge.s:317    .text:0000000000000174 .LBE65
     /tmp/cchX6Xge.s:3847   .debug_loc:000000000000038b .LLST15
     /tmp/cchX6Xge.s:3854   .debug_loc:00000000000003ae .LLST16
     /tmp/cchX6Xge.s:3861   .debug_loc:00000000000003d1 .LLST17
     /tmp/cchX6Xge.s:318    .text:0000000000000174 .LBB67
     /tmp/cchX6Xge.s:3868   .debug_loc:00000000000003f4 .LLST18
     /tmp/cchX6Xge.s:3876   .debug_loc:0000000000000418 .LLST19
     /tmp/cchX6Xge.s:3891   .debug_loc:0000000000000460 .LLST20
     /tmp/cchX6Xge.s:3906   .debug_loc:00000000000004a9 .LLST21
     /tmp/cchX6Xge.s:3921   .debug_loc:00000000000004f1 .LLST22
     /tmp/cchX6Xge.s:3945   .debug_loc:0000000000000561 .LLST23
     /tmp/cchX6Xge.s:3965   .debug_loc:00000000000005be .LLST24
     /tmp/cchX6Xge.s:350    .text:00000000000001b8 .LBB69
     /tmp/cchX6Xge.s:357    .text:00000000000001c0 .LBE69
     /tmp/cchX6Xge.s:3976   .debug_loc:00000000000005f4 .LLST25
     /tmp/cchX6Xge.s:3983   .debug_loc:0000000000000617 .LLST26
GAS LISTING /tmp/cchX6Xge.s 			page 26


     /tmp/cchX6Xge.s:3990   .debug_loc:000000000000063a .LLST27
     /tmp/cchX6Xge.s:335    .text:000000000000019c .LVL31
     /tmp/cchX6Xge.s:349    .text:00000000000001b8 .LVL34
     /tmp/cchX6Xge.s:305    .text:0000000000000164 .LVL25
     /tmp/cchX6Xge.s:372    .text:00000000000001d4 .LVL37
     /tmp/cchX6Xge.s:186    .text:00000000000000b4 .LFB28
     /tmp/cchX6Xge.s:259    .text:0000000000000124 .LFE28
     /tmp/cchX6Xge.s:3997   .debug_loc:000000000000065d .LLST5
     /tmp/cchX6Xge.s:203    .text:00000000000000cc .LBB47
     /tmp/cchX6Xge.s:4019   .debug_loc:00000000000006bc .LLST6
     /tmp/cchX6Xge.s:4034   .debug_loc:0000000000000705 .LLST7
     /tmp/cchX6Xge.s:210    .text:00000000000000d8 .LBB49
     /tmp/cchX6Xge.s:217    .text:00000000000000e0 .LBE49
     /tmp/cchX6Xge.s:4049   .debug_loc:000000000000074d .LLST8
     /tmp/cchX6Xge.s:4057   .debug_loc:0000000000000771 .LLST9
     /tmp/cchX6Xge.s:4064   .debug_loc:0000000000000794 .LLST10
     /tmp/cchX6Xge.s:209    .text:00000000000000d8 .LVL15
     /tmp/cchX6Xge.s:110    .text:0000000000000048 .LFB27
     /tmp/cchX6Xge.s:180    .text:00000000000000b4 .LFE27
     /tmp/cchX6Xge.s:125    .text:000000000000005c .LBB43
     /tmp/cchX6Xge.s:4071   .debug_loc:00000000000007b7 .LLST2
     /tmp/cchX6Xge.s:4086   .debug_loc:00000000000007ff .LLST3
     /tmp/cchX6Xge.s:4097   .debug_loc:0000000000000835 .LLST4
     /tmp/cchX6Xge.s:145    .text:0000000000000088 .LVL8
     /tmp/cchX6Xge.s:4227   .debug_str:00000000000001fe .LASF131
     /tmp/cchX6Xge.s:14     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000000 .LFB12
     /tmp/cchX6Xge.s:46     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000034 .LFE12
     /tmp/cchX6Xge.s:4104   .debug_loc:0000000000000858 .LLST0
     /tmp/cchX6Xge.s:4363   .debug_str:0000000000000767 .LASF132
     /tmp/cchX6Xge.s:4461   .debug_str:0000000000000add .LASF133
     /tmp/cchX6Xge.s:4217   .debug_str:0000000000000195 .LASF135
     /tmp/cchX6Xge.s:4399   .debug_str:0000000000000898 .LASF134
     /tmp/cchX6Xge.s:4443   .debug_str:0000000000000a2d .LASF136
     /tmp/cchX6Xge.s:4389   .debug_str:0000000000000852 .LASF143
     /tmp/cchX6Xge.s:4459   .debug_str:0000000000000ad6 .LASF144
     /tmp/cchX6Xge.s:80     .text:000000000000002c .LVL3
     /tmp/cchX6Xge.s:89     .text:000000000000003c .LVL4
     /tmp/cchX6Xge.s:436    .text:0000000000000234 .LVL40
     /tmp/cchX6Xge.s:525    .text:00000000000002c4 .LVL53
     /tmp/cchX6Xge.s:528    .text:00000000000002c8 .LVL54
     /tmp/cchX6Xge.s:579    .text:0000000000000318 .LVL59
     /tmp/cchX6Xge.s:426    .text:0000000000000220 .LVL39
     /tmp/cchX6Xge.s:454    .text:000000000000025c .LVL42
     /tmp/cchX6Xge.s:540    .text:00000000000002d4 .LVL55
     /tmp/cchX6Xge.s:556    .text:00000000000002f8 .LVL57
     /tmp/cchX6Xge.s:548    .text:00000000000002e4 .LVL56
     /tmp/cchX6Xge.s:461    .text:0000000000000264 .LVL43
     /tmp/cchX6Xge.s:471    .text:0000000000000270 .LVL45
     /tmp/cchX6Xge.s:477    .text:0000000000000274 .LVL46
     /tmp/cchX6Xge.s:483    .text:0000000000000278 .LVL47
     /tmp/cchX6Xge.s:508    .text:00000000000002a8 .LVL50
     /tmp/cchX6Xge.s:567    .text:000000000000030c .LVL58
     /tmp/cchX6Xge.s:495    .text:000000000000028c .LVL49
     /tmp/cchX6Xge.s:514    .text:00000000000002ac .LVL51
     /tmp/cchX6Xge.s:268    .text:0000000000000124 .LVL21
     /tmp/cchX6Xge.s:303    .text:000000000000015c .LVL24
     /tmp/cchX6Xge.s:326    .text:0000000000000184 .LVL30
GAS LISTING /tmp/cchX6Xge.s 			page 27


     /tmp/cchX6Xge.s:288    .text:0000000000000150 .LVL22
     /tmp/cchX6Xge.s:323    .text:0000000000000180 .LVL29
     /tmp/cchX6Xge.s:297    .text:0000000000000158 .LVL23
     /tmp/cchX6Xge.s:307    .text:0000000000000168 .LVL26
     /tmp/cchX6Xge.s:313    .text:0000000000000170 .LVL27
     /tmp/cchX6Xge.s:315    .text:0000000000000174 .LVL28
     /tmp/cchX6Xge.s:366    .text:00000000000001cc .LVL36
     /tmp/cchX6Xge.s:389    .text:00000000000001f0 .LVL38
     /tmp/cchX6Xge.s:338    .text:00000000000001a0 .LVL32
     /tmp/cchX6Xge.s:343    .text:00000000000001a8 .LVL33
     /tmp/cchX6Xge.s:355    .text:00000000000001c0 .LVL35
     /tmp/cchX6Xge.s:189    .text:00000000000000b4 .LVL12
     /tmp/cchX6Xge.s:207    .text:00000000000000d0 .LVL14
     /tmp/cchX6Xge.s:240    .text:0000000000000108 .LVL18
     /tmp/cchX6Xge.s:244    .text:0000000000000110 .LVL19
     /tmp/cchX6Xge.s:202    .text:00000000000000cc .LVL13
     /tmp/cchX6Xge.s:227    .text:00000000000000fc .LVL17
     /tmp/cchX6Xge.s:253    .text:0000000000000120 .LVL20
     /tmp/cchX6Xge.s:215    .text:00000000000000e0 .LVL16
     /tmp/cchX6Xge.s:124    .text:000000000000005c .LVL5
     /tmp/cchX6Xge.s:162    .text:00000000000000a0 .LVL9
     /tmp/cchX6Xge.s:174    .text:00000000000000b0 .LVL11
     /tmp/cchX6Xge.s:132    .text:000000000000006c .LVL6
     /tmp/cchX6Xge.s:170    .text:00000000000000ac .LVL10
     /tmp/cchX6Xge.s:142    .text:0000000000000080 .LVL7
     /tmp/cchX6Xge.s:18     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000000 .LVL0
     /tmp/cchX6Xge.s:28     .text._ZN14SleepingThread15_scheduler_ruleEPS_S0_Rm:0000000000000010 .LVL1
     /tmp/cchX6Xge.s:644    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cchX6Xge.s:8      .text:0000000000000000 .Ltext0
     /tmp/cchX6Xge.s:640    .text:0000000000000358 .Letext0
     /tmp/cchX6Xge.s:148    .text:0000000000000088 .LBE43
     /tmp/cchX6Xge.s:165    .text:00000000000000a0 .LBB46
     /tmp/cchX6Xge.s:176    .text:00000000000000b0 .LBE46
     /tmp/cchX6Xge.s:230    .text:00000000000000fc .LBE47
     /tmp/cchX6Xge.s:247    .text:0000000000000110 .LBB52
     /tmp/cchX6Xge.s:255    .text:0000000000000120 .LBE52
     /tmp/cchX6Xge.s:368    .text:00000000000001cc .LBE67
     /tmp/cchX6Xge.s:392    .text:00000000000001f0 .LBB72
     /tmp/cchX6Xge.s:402    .text:0000000000000208 .LBE72
     /tmp/cchX6Xge.s:467    .text:000000000000026c .LBE88
     /tmp/cchX6Xge.s:541    .text:00000000000002d4 .LBB100
     /tmp/cchX6Xge.s:559    .text:00000000000002f8 .LBE100
     /tmp/cchX6Xge.s:510    .text:00000000000002a8 .LBE93
     /tmp/cchX6Xge.s:560    .text:00000000000002f8 .LBB101
     /tmp/cchX6Xge.s:570    .text:000000000000030c .LBE101

UNDEFINED SYMBOLS
_ZdlPv
_Znwm
_ZN3TCB7runningE
_ZN3TCB5yieldEv
_Z6assertbPKc
