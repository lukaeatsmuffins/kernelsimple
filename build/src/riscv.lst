GAS LISTING /tmp/cc37cDCn.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option nopic
   3              		.option norelax
   4              		.attribute arch, "rv64i2p0_m2p0_a2p0"
   5              		.attribute unaligned_access, 0
   6              		.attribute stack_align, 16
   7              		.text
   8              	.Ltext0:
   9              		.align	2
  10              		.globl	_ZN5Riscv10popSppSpieEv
  12              	_ZN5Riscv10popSppSpieEv:
  13              	.LFB33:
  14              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/tcb.hpp"
   7:src/riscv.cpp **** #include "../lib/console.h"
   8:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   9:src/riscv.cpp **** #include "../h/mem.hpp"
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** void Riscv::popSppSpie()
  12:src/riscv.cpp **** {
  15              		.loc 1 12 1
  16              		.cfi_startproc
  17 0000 130101FF 		addi	sp,sp,-16
  18              		.cfi_def_cfa_offset 16
  19 0004 23348100 		sd	s0,8(sp)
  20              		.cfi_offset 8, -8
  21 0008 13040101 		addi	s0,sp,16
  22              		.cfi_def_cfa 8, 0
  13:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  23              		.loc 1 13 5
  24              		.loc 1 13 38 is_stmt 0
  25              	 #APP
  26              	# 13 "src/riscv.cpp" 1
  14              	    __asm__ volatile("sret");
  27              		csrw sepc, ra
  28              	# 0 "" 2
  29              		.loc 1 14 5 is_stmt 1
  30              		.loc 1 14 29 is_stmt 0
  31              	# 14 "src/riscv.cpp" 1
  15              	}
  32              		sret
  33              	# 0 "" 2
  34              		.loc 1 15 1
  35              	 #NO_APP
  36 0014 03348100 		ld	s0,8(sp)
  37              		.cfi_restore 8
  38              		.cfi_def_cfa 2, 16
  39 0018 13010101 		addi	sp,sp,16
  40              		.cfi_def_cfa_offset 0
  41 001c 67800000 		jr	ra
  42              		.cfi_endproc
  43              	.LFE33:
GAS LISTING /tmp/cc37cDCn.s 			page 2


  45              		.align	2
  46              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  48              	_ZN5Riscv20handleSupervisorTrapEv:
  49              	.LFB34:
  16:src/riscv.cpp **** 
  17:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  18:src/riscv.cpp **** {
  50              		.loc 1 18 1 is_stmt 1
  51              		.cfi_startproc
  52 0020 130101F6 		addi	sp,sp,-160
  53              		.cfi_def_cfa_offset 160
  54 0024 233C1108 		sd	ra,152(sp)
  55 0028 23388108 		sd	s0,144(sp)
  56 002c 23349108 		sd	s1,136(sp)
  57 0030 23302109 		sd	s2,128(sp)
  58 0034 233C3107 		sd	s3,120(sp)
  59 0038 23384107 		sd	s4,112(sp)
  60 003c 23345107 		sd	s5,104(sp)
  61 0040 23306107 		sd	s6,96(sp)
  62 0044 233C7105 		sd	s7,88(sp)
  63 0048 23388105 		sd	s8,80(sp)
  64              		.cfi_offset 1, -8
  65              		.cfi_offset 8, -16
  66              		.cfi_offset 9, -24
  67              		.cfi_offset 18, -32
  68              		.cfi_offset 19, -40
  69              		.cfi_offset 20, -48
  70              		.cfi_offset 21, -56
  71              		.cfi_offset 22, -64
  72              		.cfi_offset 23, -72
  73              		.cfi_offset 24, -80
  74 004c 1304010A 		addi	s0,sp,160
  75              		.cfi_def_cfa 8, 0
  19:src/riscv.cpp **** 
  20:src/riscv.cpp ****     uint64 scause = r_scause();
  76              		.loc 1 20 5
  77              	.LBB30:
  78              	.LBB31:
  79              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** extern const size_t DEFAULT_STACK_SIZE;
  11:src/../h/riscv.hpp **** extern const time_t DEFAULT_TIME_SLICE;
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp **** class Riscv
  14:src/../h/riscv.hpp **** {
  15:src/../h/riscv.hpp **** public:
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  18:src/../h/riscv.hpp ****     static void popSppSpie();
GAS LISTING /tmp/cc37cDCn.s 			page 3


  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read register scause
  21:src/../h/riscv.hpp ****     static uint64 r_scause();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register scause
  24:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read register sepc
  27:src/../h/riscv.hpp ****     static uint64 r_sepc();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register sepc
  30:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register stvec
  33:src/../h/riscv.hpp ****     static uint64 r_stvec();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stvec
  36:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // read register stval
  39:src/../h/riscv.hpp ****     static uint64 r_stval();
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     // write register stval
  42:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     enum BitMaskSip
  45:src/../h/riscv.hpp ****     {
  46:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  47:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  48:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  49:src/../h/riscv.hpp ****     };
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask set register sip
  52:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // mask clear register sip
  55:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // read register sip
  58:src/../h/riscv.hpp ****     static uint64 r_sip();
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // write register sip
  61:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/riscv.hpp ****     {
  65:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/riscv.hpp ****     };
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask set register sstatus
  71:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // mask clear register sstatus
  74:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc37cDCn.s 			page 4


  76:src/../h/riscv.hpp ****     // read register sstatus
  77:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // write register sstatus
  80:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     // supervisor trap
  83:src/../h/riscv.hpp ****     static void supervisorTrap();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp **** private:
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     // supervisor trap handler
  88:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp **** };
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/riscv.hpp **** {
  94:src/../h/riscv.hpp ****     uint64 volatile scause;
  80              		.loc 2 94 5
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  81              		.loc 2 95 5
  82              		.loc 2 95 72 is_stmt 0
  83              	 #APP
  84              	# 95 "src/../h/riscv.hpp" 1
  96              	    return scause;
  85              		csrr a5, scause
  86              	# 0 "" 2
  87              	 #NO_APP
  88 0054 2334F4F8 		sd	a5,-120(s0)
  89              		.loc 2 96 5 is_stmt 1
  90              		.loc 2 96 12 is_stmt 0
  91 0058 033784F8 		ld	a4,-120(s0)
  92              	.LVL0:
  93              	.LBE31:
  94              	.LBE30:
  21:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
  95              		.loc 1 21 5 is_stmt 1
  96              	.LBB32:
  97              		.loc 1 21 40 is_stmt 0
  98 005c 930687FF 		addi	a3,a4,-8
  99              		.loc 1 21 5
 100 0060 93071000 		li	a5,1
 101 0064 63FAD704 		bleu	a3,a5,.L14
 102              	.LBE32:
  22:src/riscv.cpp ****     {
  23:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  24:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
  25:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
  26:src/riscv.cpp **** 
  27:src/riscv.cpp ****         uint64 a0, a1, a2, a3, a4, a5, a6, a7;
  28:src/riscv.cpp ****         __asm__ volatile ("mv %0, a0" : "=r"(a0));
  29:src/riscv.cpp ****         __asm__ volatile ("mv %0, a1" : "=r"(a1));
  30:src/riscv.cpp ****         __asm__ volatile ("mv %0, a2" : "=r"(a2));
  31:src/riscv.cpp ****         __asm__ volatile ("mv %0, a3" : "=r"(a3));
  32:src/riscv.cpp ****         __asm__ volatile ("mv %0, a4" : "=r"(a4));
  33:src/riscv.cpp ****         __asm__ volatile ("mv %0, a5" : "=r"(a5));
GAS LISTING /tmp/cc37cDCn.s 			page 5


  34:src/riscv.cpp ****         __asm__ volatile ("mv %0, a6" : "=r"(a6));
  35:src/riscv.cpp ****         __asm__ volatile ("mv %0, a7" : "=r"(a7));
  36:src/riscv.cpp **** 
  37:src/riscv.cpp ****         debug_print("--------------------------------\n");
  38:src/riscv.cpp ****         debug_print("SYSCALL!\n");
  39:src/riscv.cpp ****         debug_print("a0=");
  40:src/riscv.cpp ****         debug_print(a0);
  41:src/riscv.cpp ****         debug_print("\n");
  42:src/riscv.cpp ****         debug_print("a1=");
  43:src/riscv.cpp ****         debug_print(a1);
  44:src/riscv.cpp ****         debug_print("\n");
  45:src/riscv.cpp ****         debug_print("a2=");
  46:src/riscv.cpp ****         debug_print(a2);
  47:src/riscv.cpp ****         debug_print("\n");
  48:src/riscv.cpp ****         debug_print("a3=");
  49:src/riscv.cpp ****         debug_print(a3);
  50:src/riscv.cpp ****         debug_print("\n");
  51:src/riscv.cpp ****         debug_print("a4=");
  52:src/riscv.cpp ****         debug_print(a4);
  53:src/riscv.cpp ****         debug_print("\n");
  54:src/riscv.cpp ****         debug_print("a5=");
  55:src/riscv.cpp ****         debug_print(a5);
  56:src/riscv.cpp ****         debug_print("\n");
  57:src/riscv.cpp ****         debug_print("a6=");
  58:src/riscv.cpp ****         debug_print(a6);
  59:src/riscv.cpp ****         debug_print("\n");
  60:src/riscv.cpp ****         debug_print("a7=");
  61:src/riscv.cpp ****         debug_print(a7);
  62:src/riscv.cpp ****         debug_print("\n");
  63:src/riscv.cpp ****         debug_print("--------------------------------\n");
  64:src/riscv.cpp **** 
  65:src/riscv.cpp ****         uint64 res = 0;
  66:src/riscv.cpp ****         switch (a0) {
  67:src/riscv.cpp ****             case SyscallCode::MEM_ALLOC:
  68:src/riscv.cpp ****                 debug_print("MEM_ALLOC SYSCALL\n");
  69:src/riscv.cpp **** 
  70:src/riscv.cpp ****                 res = (uint64)MemoryAllocator::getInstance()->mem_alloc(a1);
  71:src/riscv.cpp ****                 break;
  72:src/riscv.cpp ****             case SyscallCode::MEM_FREE:
  73:src/riscv.cpp ****                 debug_print("MEM_FREE SYSCALL\n");
  74:src/riscv.cpp **** 
  75:src/riscv.cpp ****                 res = MemoryAllocator::getInstance()->mem_free((void*)a1);
  76:src/riscv.cpp ****                 break;
  77:src/riscv.cpp ****             case SyscallCode::MEM_GET_FREE_SPACE:
  78:src/riscv.cpp ****                 MemoryAllocator::getInstance()->mem_get_free_space();
  79:src/riscv.cpp ****                 break;
  80:src/riscv.cpp ****             case SyscallCode::MEM_GET_LARGEST_FREE_BLOCK:
  81:src/riscv.cpp ****                 MemoryAllocator::getInstance()->mem_get_largest_free_block();
  82:src/riscv.cpp ****                 break;
  83:src/riscv.cpp ****         }
  84:src/riscv.cpp ****         __asm__ volatile ("mv a0, %0" : : "r"(res));
  85:src/riscv.cpp **** 
  86:src/riscv.cpp ****         // Overwrite a0 with the result from the syscall.
  87:src/riscv.cpp ****         __asm__ volatile ("sd %0, 10*8(x8)" : : "r"(res));
  88:src/riscv.cpp **** 
  89:src/riscv.cpp ****         debug_print("res=");
  90:src/riscv.cpp ****         debug_print(res);
GAS LISTING /tmp/cc37cDCn.s 			page 6


  91:src/riscv.cpp ****         debug_print("\n");
  92:src/riscv.cpp ****         debug_print("--------------------------------\n");
  93:src/riscv.cpp **** 
  94:src/riscv.cpp ****         w_sstatus(sstatus);
  95:src/riscv.cpp ****         w_sepc(sepc);
  96:src/riscv.cpp ****     }
  97:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
 103              		.loc 1 97 10 is_stmt 1
 104              	.LBB59:
 105              	.LBB33:
 106 0068 9307F0FF 		li	a5,-1
 107 006c 9397F703 		slli	a5,a5,63
 108 0070 93871700 		addi	a5,a5,1
 109 0074 6304F732 		beq	a4,a5,.L15
  98:src/riscv.cpp ****     {
  99:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 100:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 101:src/riscv.cpp ****         TCB::timeSliceCounter++;
 102:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 103:src/riscv.cpp ****         {
 104:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 105:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 106:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 107:src/riscv.cpp ****             TCB::dispatch();
 108:src/riscv.cpp ****             w_sstatus(sstatus);
 109:src/riscv.cpp ****             w_sepc(sepc);
 110:src/riscv.cpp ****         }
 111:src/riscv.cpp ****     }
 112:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 110              		.loc 1 112 10
 111 0078 9307F0FF 		li	a5,-1
 112 007c 9397F703 		slli	a5,a5,63
 113 0080 93879700 		addi	a5,a5,9
 114 0084 6306F738 		beq	a4,a5,.L16
 115              	.LVL1:
 116              	.L3:
 117              	.LBE33:
 118              	.LBE59:
 113:src/riscv.cpp ****     {
 114:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 115:src/riscv.cpp ****         console_handler();
 116:src/riscv.cpp ****     }
 117:src/riscv.cpp ****     else
 118:src/riscv.cpp ****     {
 119:src/riscv.cpp ****         // unexpected trap cause
 120:src/riscv.cpp ****     }
 121:src/riscv.cpp **** }...
 119              		.loc 1 121 1 is_stmt 0
 120 0088 83308109 		ld	ra,152(sp)
 121              		.cfi_remember_state
 122              		.cfi_restore 1
 123 008c 03340109 		ld	s0,144(sp)
 124              		.cfi_restore 8
 125              		.cfi_def_cfa 2, 160
 126 0090 83348108 		ld	s1,136(sp)
 127              		.cfi_restore 9
 128 0094 03390108 		ld	s2,128(sp)
GAS LISTING /tmp/cc37cDCn.s 			page 7


 129              		.cfi_restore 18
 130 0098 83398107 		ld	s3,120(sp)
 131              		.cfi_restore 19
 132 009c 033A0107 		ld	s4,112(sp)
 133              		.cfi_restore 20
 134 00a0 833A8106 		ld	s5,104(sp)
 135              		.cfi_restore 21
 136 00a4 033B0106 		ld	s6,96(sp)
 137              		.cfi_restore 22
 138 00a8 833B8105 		ld	s7,88(sp)
 139              		.cfi_restore 23
 140 00ac 033C0105 		ld	s8,80(sp)
 141              		.cfi_restore 24
 142 00b0 1301010A 		addi	sp,sp,160
 143              		.cfi_def_cfa_offset 0
 144 00b4 67800000 		jr	ra
 145              	.LVL2:
 146              	.L14:
 147              		.cfi_restore_state
 148              	.LBB60:
 149              	.LBB49:
  24:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 150              		.loc 1 24 9 is_stmt 1
 151              	.LBB50:
 152              	.LBB51:
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/riscv.hpp **** {
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/riscv.hpp **** }
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/riscv.hpp **** {
 106:src/../h/riscv.hpp ****     uint64 volatile sepc;
 153              		.loc 2 106 5
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 154              		.loc 2 107 5
 155              		.loc 2 107 64 is_stmt 0
 156              	 #APP
 157              	# 107 "src/../h/riscv.hpp" 1
 108              	    return sepc;
 158              		csrr a5, sepc
 159              	# 0 "" 2
 160              	 #NO_APP
 161 00bc 233CF4F8 		sd	a5,-104(s0)
 162              		.loc 2 108 5 is_stmt 1
 163              		.loc 2 108 12 is_stmt 0
 164 00c0 833784F9 		ld	a5,-104(s0)
 165              	.LBE51:
 166              	.LBE50:
  24:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 167              		.loc 1 24 41
 168 00c4 93874700 		addi	a5,a5,4
  24:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 169              		.loc 1 24 43
 170 00c8 2334F4F6 		sd	a5,-152(s0)
GAS LISTING /tmp/cc37cDCn.s 			page 8


  25:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 171              		.loc 1 25 9 is_stmt 1
 172              	.LBB52:
 173              	.LBB53:
 109:src/../h/riscv.hpp **** }
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/riscv.hpp **** {
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/riscv.hpp **** {
 118:src/../h/riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/riscv.hpp ****     return stvec;
 121:src/../h/riscv.hpp **** }
 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/riscv.hpp **** {
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 126:src/../h/riscv.hpp **** }
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 129:src/../h/riscv.hpp **** {
 130:src/../h/riscv.hpp ****     uint64 volatile stval;
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 132:src/../h/riscv.hpp ****     return stval;
 133:src/../h/riscv.hpp **** }
 134:src/../h/riscv.hpp **** 
 135:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 136:src/../h/riscv.hpp **** {
 137:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 138:src/../h/riscv.hpp **** }
 139:src/../h/riscv.hpp **** 
 140:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 141:src/../h/riscv.hpp **** {
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 143:src/../h/riscv.hpp **** }
 144:src/../h/riscv.hpp **** 
 145:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 146:src/../h/riscv.hpp **** {
 147:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/riscv.hpp **** }
 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 151:src/../h/riscv.hpp **** {
 152:src/../h/riscv.hpp ****     uint64 volatile sip;
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 154:src/../h/riscv.hpp ****     return sip;
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc37cDCn.s 			page 9


 162:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 163:src/../h/riscv.hpp **** {
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/riscv.hpp **** }
 171:src/../h/riscv.hpp **** 
 172:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 173:src/../h/riscv.hpp **** {
 174:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 174              		.loc 2 174 5
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 175              		.loc 2 175 5
 176              		.loc 2 175 76 is_stmt 0
 177              	 #APP
 178              	# 175 "src/../h/riscv.hpp" 1
 176              	    return sstatus;
 179              		csrr a5, sstatus
 180              	# 0 "" 2
 181              	 #NO_APP
 182 00d0 2338F4F8 		sd	a5,-112(s0)
 183              		.loc 2 176 5 is_stmt 1
 184              		.loc 2 176 12 is_stmt 0
 185 00d4 833704F9 		ld	a5,-112(s0)
 186              	.LBE53:
 187              	.LBE52:
  25:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 188              		.loc 1 25 45
 189 00d8 2338F4F6 		sd	a5,-144(s0)
  27:src/riscv.cpp ****         uint64 a0, a1, a2, a3, a4, a5, a6, a7;
 190              		.loc 1 27 9 is_stmt 1
  28:src/riscv.cpp ****         __asm__ volatile ("mv %0, a0" : "=r"(a0));
 191              		.loc 1 28 9
  28:src/riscv.cpp ****         __asm__ volatile ("mv %0, a0" : "=r"(a0));
 192              		.loc 1 28 50 is_stmt 0
 193              	 #APP
 194              	# 28 "src/riscv.cpp" 1
 195              		mv s1, a0
 196              	# 0 "" 2
 197              	.LVL3:
  29:src/riscv.cpp ****         __asm__ volatile ("mv %0, a1" : "=r"(a1));
 198              		.loc 1 29 9 is_stmt 1
  29:src/riscv.cpp ****         __asm__ volatile ("mv %0, a1" : "=r"(a1));
 199              		.loc 1 29 50 is_stmt 0
 200              	# 29 "src/riscv.cpp" 1
 201              		mv s2, a1
 202              	# 0 "" 2
 203              	.LVL4:
  30:src/riscv.cpp ****         __asm__ volatile ("mv %0, a2" : "=r"(a2));
 204              		.loc 1 30 9 is_stmt 1
  30:src/riscv.cpp ****         __asm__ volatile ("mv %0, a2" : "=r"(a2));
 205              		.loc 1 30 50 is_stmt 0
 206              	# 30 "src/riscv.cpp" 1
 207              		mv s8, a2
GAS LISTING /tmp/cc37cDCn.s 			page 10


 208              	# 0 "" 2
 209              	.LVL5:
  31:src/riscv.cpp ****         __asm__ volatile ("mv %0, a3" : "=r"(a3));
 210              		.loc 1 31 9 is_stmt 1
  31:src/riscv.cpp ****         __asm__ volatile ("mv %0, a3" : "=r"(a3));
 211              		.loc 1 31 50 is_stmt 0
 212              	# 31 "src/riscv.cpp" 1
 213              		mv s7, a3
 214              	# 0 "" 2
 215              	.LVL6:
  32:src/riscv.cpp ****         __asm__ volatile ("mv %0, a4" : "=r"(a4));
 216              		.loc 1 32 9 is_stmt 1
  32:src/riscv.cpp ****         __asm__ volatile ("mv %0, a4" : "=r"(a4));
 217              		.loc 1 32 50 is_stmt 0
 218              	# 32 "src/riscv.cpp" 1
 219              		mv s6, a4
 220              	# 0 "" 2
 221              	.LVL7:
  33:src/riscv.cpp ****         __asm__ volatile ("mv %0, a5" : "=r"(a5));
 222              		.loc 1 33 9 is_stmt 1
  33:src/riscv.cpp ****         __asm__ volatile ("mv %0, a5" : "=r"(a5));
 223              		.loc 1 33 50 is_stmt 0
 224              	# 33 "src/riscv.cpp" 1
 225              		mv s5, a5
 226              	# 0 "" 2
 227              	.LVL8:
  34:src/riscv.cpp ****         __asm__ volatile ("mv %0, a6" : "=r"(a6));
 228              		.loc 1 34 9 is_stmt 1
  34:src/riscv.cpp ****         __asm__ volatile ("mv %0, a6" : "=r"(a6));
 229              		.loc 1 34 50 is_stmt 0
 230              	# 34 "src/riscv.cpp" 1
 231              		mv s4, a6
 232              	# 0 "" 2
 233              	.LVL9:
  35:src/riscv.cpp ****         __asm__ volatile ("mv %0, a7" : "=r"(a7));
 234              		.loc 1 35 9 is_stmt 1
  35:src/riscv.cpp ****         __asm__ volatile ("mv %0, a7" : "=r"(a7));
 235              		.loc 1 35 50 is_stmt 0
 236              	# 35 "src/riscv.cpp" 1
 237              		mv s3, a7
 238              	# 0 "" 2
 239              	.LVL10:
  37:src/riscv.cpp ****         debug_print("--------------------------------\n");
 240              		.loc 1 37 9 is_stmt 1
  37:src/riscv.cpp ****         debug_print("--------------------------------\n");
 241              		.loc 1 37 20 is_stmt 0
 242              	 #NO_APP
 243 00fc 17050000 		lla	a0,.LC0
 243      13050500 
 244 0104 97000000 		call	_Z11debug_printPKc
 244      E7800000 
 245              	.LVL11:
  38:src/riscv.cpp ****         debug_print("SYSCALL!\n");
 246              		.loc 1 38 9 is_stmt 1
  38:src/riscv.cpp ****         debug_print("SYSCALL!\n");
 247              		.loc 1 38 20 is_stmt 0
 248 010c 17050000 		lla	a0,.LC1
GAS LISTING /tmp/cc37cDCn.s 			page 11


 248      13050500 
 249 0114 97000000 		call	_Z11debug_printPKc
 249      E7800000 
 250              	.LVL12:
  39:src/riscv.cpp ****         debug_print("a0=");
 251              		.loc 1 39 9 is_stmt 1
  39:src/riscv.cpp ****         debug_print("a0=");
 252              		.loc 1 39 20 is_stmt 0
 253 011c 17050000 		lla	a0,.LC2
 253      13050500 
 254 0124 97000000 		call	_Z11debug_printPKc
 254      E7800000 
 255              	.LVL13:
  40:src/riscv.cpp ****         debug_print(a0);
 256              		.loc 1 40 9 is_stmt 1
  40:src/riscv.cpp ****         debug_print(a0);
 257              		.loc 1 40 20 is_stmt 0
 258 012c 13850400 		mv	a0,s1
 259 0130 97000000 		call	_Z11debug_printm
 259      E7800000 
 260              	.LVL14:
  41:src/riscv.cpp ****         debug_print("\n");
 261              		.loc 1 41 9 is_stmt 1
  41:src/riscv.cpp ****         debug_print("\n");
 262              		.loc 1 41 20 is_stmt 0
 263 0138 17050000 		lla	a0,.LC3
 263      13050500 
 264 0140 97000000 		call	_Z11debug_printPKc
 264      E7800000 
 265              	.LVL15:
  42:src/riscv.cpp ****         debug_print("a1=");
 266              		.loc 1 42 9 is_stmt 1
  42:src/riscv.cpp ****         debug_print("a1=");
 267              		.loc 1 42 20 is_stmt 0
 268 0148 17050000 		lla	a0,.LC4
 268      13050500 
 269 0150 97000000 		call	_Z11debug_printPKc
 269      E7800000 
 270              	.LVL16:
  43:src/riscv.cpp ****         debug_print(a1);
 271              		.loc 1 43 9 is_stmt 1
  43:src/riscv.cpp ****         debug_print(a1);
 272              		.loc 1 43 20 is_stmt 0
 273 0158 13050900 		mv	a0,s2
 274 015c 97000000 		call	_Z11debug_printm
 274      E7800000 
 275              	.LVL17:
  44:src/riscv.cpp ****         debug_print("\n");
 276              		.loc 1 44 9 is_stmt 1
  44:src/riscv.cpp ****         debug_print("\n");
 277              		.loc 1 44 20 is_stmt 0
 278 0164 17050000 		lla	a0,.LC3
 278      13050500 
 279 016c 97000000 		call	_Z11debug_printPKc
 279      E7800000 
 280              	.LVL18:
  45:src/riscv.cpp ****         debug_print("a2=");
GAS LISTING /tmp/cc37cDCn.s 			page 12


 281              		.loc 1 45 9 is_stmt 1
  45:src/riscv.cpp ****         debug_print("a2=");
 282              		.loc 1 45 20 is_stmt 0
 283 0174 17050000 		lla	a0,.LC5
 283      13050500 
 284 017c 97000000 		call	_Z11debug_printPKc
 284      E7800000 
 285              	.LVL19:
  46:src/riscv.cpp ****         debug_print(a2);
 286              		.loc 1 46 9 is_stmt 1
  46:src/riscv.cpp ****         debug_print(a2);
 287              		.loc 1 46 20 is_stmt 0
 288 0184 13050C00 		mv	a0,s8
 289 0188 97000000 		call	_Z11debug_printm
 289      E7800000 
 290              	.LVL20:
  47:src/riscv.cpp ****         debug_print("\n");
 291              		.loc 1 47 9 is_stmt 1
  47:src/riscv.cpp ****         debug_print("\n");
 292              		.loc 1 47 20 is_stmt 0
 293 0190 17050000 		lla	a0,.LC3
 293      13050500 
 294 0198 97000000 		call	_Z11debug_printPKc
 294      E7800000 
 295              	.LVL21:
  48:src/riscv.cpp ****         debug_print("a3=");
 296              		.loc 1 48 9 is_stmt 1
  48:src/riscv.cpp ****         debug_print("a3=");
 297              		.loc 1 48 20 is_stmt 0
 298 01a0 17050000 		lla	a0,.LC6
 298      13050500 
 299 01a8 97000000 		call	_Z11debug_printPKc
 299      E7800000 
 300              	.LVL22:
  49:src/riscv.cpp ****         debug_print(a3);
 301              		.loc 1 49 9 is_stmt 1
  49:src/riscv.cpp ****         debug_print(a3);
 302              		.loc 1 49 20 is_stmt 0
 303 01b0 13850B00 		mv	a0,s7
 304 01b4 97000000 		call	_Z11debug_printm
 304      E7800000 
 305              	.LVL23:
  50:src/riscv.cpp ****         debug_print("\n");
 306              		.loc 1 50 9 is_stmt 1
  50:src/riscv.cpp ****         debug_print("\n");
 307              		.loc 1 50 20 is_stmt 0
 308 01bc 17050000 		lla	a0,.LC3
 308      13050500 
 309 01c4 97000000 		call	_Z11debug_printPKc
 309      E7800000 
 310              	.LVL24:
  51:src/riscv.cpp ****         debug_print("a4=");
 311              		.loc 1 51 9 is_stmt 1
  51:src/riscv.cpp ****         debug_print("a4=");
 312              		.loc 1 51 20 is_stmt 0
 313 01cc 17050000 		lla	a0,.LC7
 313      13050500 
GAS LISTING /tmp/cc37cDCn.s 			page 13


 314 01d4 97000000 		call	_Z11debug_printPKc
 314      E7800000 
 315              	.LVL25:
  52:src/riscv.cpp ****         debug_print(a4);
 316              		.loc 1 52 9 is_stmt 1
  52:src/riscv.cpp ****         debug_print(a4);
 317              		.loc 1 52 20 is_stmt 0
 318 01dc 13050B00 		mv	a0,s6
 319 01e0 97000000 		call	_Z11debug_printm
 319      E7800000 
 320              	.LVL26:
  53:src/riscv.cpp ****         debug_print("\n");
 321              		.loc 1 53 9 is_stmt 1
  53:src/riscv.cpp ****         debug_print("\n");
 322              		.loc 1 53 20 is_stmt 0
 323 01e8 17050000 		lla	a0,.LC3
 323      13050500 
 324 01f0 97000000 		call	_Z11debug_printPKc
 324      E7800000 
 325              	.LVL27:
  54:src/riscv.cpp ****         debug_print("a5=");
 326              		.loc 1 54 9 is_stmt 1
  54:src/riscv.cpp ****         debug_print("a5=");
 327              		.loc 1 54 20 is_stmt 0
 328 01f8 17050000 		lla	a0,.LC8
 328      13050500 
 329 0200 97000000 		call	_Z11debug_printPKc
 329      E7800000 
 330              	.LVL28:
  55:src/riscv.cpp ****         debug_print(a5);
 331              		.loc 1 55 9 is_stmt 1
  55:src/riscv.cpp ****         debug_print(a5);
 332              		.loc 1 55 20 is_stmt 0
 333 0208 13850A00 		mv	a0,s5
 334 020c 97000000 		call	_Z11debug_printm
 334      E7800000 
 335              	.LVL29:
  56:src/riscv.cpp ****         debug_print("\n");
 336              		.loc 1 56 9 is_stmt 1
  56:src/riscv.cpp ****         debug_print("\n");
 337              		.loc 1 56 20 is_stmt 0
 338 0214 17050000 		lla	a0,.LC3
 338      13050500 
 339 021c 97000000 		call	_Z11debug_printPKc
 339      E7800000 
 340              	.LVL30:
  57:src/riscv.cpp ****         debug_print("a6=");
 341              		.loc 1 57 9 is_stmt 1
  57:src/riscv.cpp ****         debug_print("a6=");
 342              		.loc 1 57 20 is_stmt 0
 343 0224 17050000 		lla	a0,.LC9
 343      13050500 
 344 022c 97000000 		call	_Z11debug_printPKc
 344      E7800000 
 345              	.LVL31:
  58:src/riscv.cpp ****         debug_print(a6);
 346              		.loc 1 58 9 is_stmt 1
GAS LISTING /tmp/cc37cDCn.s 			page 14


  58:src/riscv.cpp ****         debug_print(a6);
 347              		.loc 1 58 20 is_stmt 0
 348 0234 13050A00 		mv	a0,s4
 349 0238 97000000 		call	_Z11debug_printm
 349      E7800000 
 350              	.LVL32:
  59:src/riscv.cpp ****         debug_print("\n");
 351              		.loc 1 59 9 is_stmt 1
  59:src/riscv.cpp ****         debug_print("\n");
 352              		.loc 1 59 20 is_stmt 0
 353 0240 17050000 		lla	a0,.LC3
 353      13050500 
 354 0248 97000000 		call	_Z11debug_printPKc
 354      E7800000 
 355              	.LVL33:
  60:src/riscv.cpp ****         debug_print("a7=");
 356              		.loc 1 60 9 is_stmt 1
  60:src/riscv.cpp ****         debug_print("a7=");
 357              		.loc 1 60 20 is_stmt 0
 358 0250 17050000 		lla	a0,.LC10
 358      13050500 
 359 0258 97000000 		call	_Z11debug_printPKc
 359      E7800000 
 360              	.LVL34:
  61:src/riscv.cpp ****         debug_print(a7);
 361              		.loc 1 61 9 is_stmt 1
  61:src/riscv.cpp ****         debug_print(a7);
 362              		.loc 1 61 20 is_stmt 0
 363 0260 13850900 		mv	a0,s3
 364 0264 97000000 		call	_Z11debug_printm
 364      E7800000 
 365              	.LVL35:
  62:src/riscv.cpp ****         debug_print("\n");
 366              		.loc 1 62 9 is_stmt 1
  62:src/riscv.cpp ****         debug_print("\n");
 367              		.loc 1 62 20 is_stmt 0
 368 026c 17050000 		lla	a0,.LC3
 368      13050500 
 369 0274 97000000 		call	_Z11debug_printPKc
 369      E7800000 
 370              	.LVL36:
  63:src/riscv.cpp ****         debug_print("--------------------------------\n");
 371              		.loc 1 63 9 is_stmt 1
  63:src/riscv.cpp ****         debug_print("--------------------------------\n");
 372              		.loc 1 63 20 is_stmt 0
 373 027c 17050000 		lla	a0,.LC0
 373      13050500 
 374 0284 97000000 		call	_Z11debug_printPKc
 374      E7800000 
 375              	.LVL37:
  65:src/riscv.cpp ****         uint64 res = 0;
 376              		.loc 1 65 9 is_stmt 1
  66:src/riscv.cpp ****         switch (a0) {
 377              		.loc 1 66 9
 378 028c 93072000 		li	a5,2
 379 0290 6384F40C 		beq	s1,a5,.L5
 380 0294 63F69702 		bleu	s1,a5,.L17
GAS LISTING /tmp/cc37cDCn.s 			page 15


 381 0298 93073000 		li	a5,3
 382 029c 6384F40E 		beq	s1,a5,.L9
 383 02a0 93074000 		li	a5,4
 384 02a4 6396F40A 		bne	s1,a5,.L18
  80:src/riscv.cpp ****             case SyscallCode::MEM_GET_LARGEST_FREE_BLOCK:
 385              		.loc 1 80 13
  81:src/riscv.cpp ****                 MemoryAllocator::getInstance()->mem_get_largest_free_block();
 386              		.loc 1 81 17
  81:src/riscv.cpp ****                 MemoryAllocator::getInstance()->mem_get_largest_free_block();
 387              		.loc 1 81 75 is_stmt 0
 388 02a8 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 388      E7800000 
 389              	.LVL38:
 390 02b0 97000000 		call	_ZN15MemoryAllocator26mem_get_largest_free_blockEv
 390      E7800000 
 391              	.LVL39:
  82:src/riscv.cpp ****                 break;
 392              		.loc 1 82 17 is_stmt 1
  65:src/riscv.cpp ****         uint64 res = 0;
 393              		.loc 1 65 16 is_stmt 0
 394 02b8 93040000 		li	s1,0
 395              	.LVL40:
  82:src/riscv.cpp ****                 break;
 396              		.loc 1 82 17
 397 02bc 6F00C003 		j	.L8
 398              	.LVL41:
 399              	.L17:
  66:src/riscv.cpp ****         switch (a0) {
 400              		.loc 1 66 9
 401 02c0 93071000 		li	a5,1
 402 02c4 6398F402 		bne	s1,a5,.L19
  67:src/riscv.cpp ****             case SyscallCode::MEM_ALLOC:
 403              		.loc 1 67 13 is_stmt 1
  68:src/riscv.cpp ****                 debug_print("MEM_ALLOC SYSCALL\n");
 404              		.loc 1 68 17
  68:src/riscv.cpp ****                 debug_print("MEM_ALLOC SYSCALL\n");
 405              		.loc 1 68 28 is_stmt 0
 406 02c8 17050000 		lla	a0,.LC11
 406      13050500 
 407 02d0 97000000 		call	_Z11debug_printPKc
 407      E7800000 
 408              	.LVL42:
  70:src/riscv.cpp ****                 res = (uint64)MemoryAllocator::getInstance()->mem_alloc(a1);
 409              		.loc 1 70 17 is_stmt 1
  70:src/riscv.cpp ****                 res = (uint64)MemoryAllocator::getInstance()->mem_alloc(a1);
 410              		.loc 1 70 72 is_stmt 0
 411 02d8 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 411      E7800000 
 412              	.LVL43:
 413 02e0 93050900 		mv	a1,s2
 414 02e4 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 414      E7800000 
 415              	.LVL44:
 416 02ec 93040500 		mv	s1,a0
 417              	.LVL45:
  71:src/riscv.cpp ****                 break;
 418              		.loc 1 71 17 is_stmt 1
GAS LISTING /tmp/cc37cDCn.s 			page 16


 419 02f0 6F008000 		j	.L8
 420              	.LVL46:
 421              	.L19:
  65:src/riscv.cpp ****         uint64 res = 0;
 422              		.loc 1 65 16 is_stmt 0
 423 02f4 93040000 		li	s1,0
 424              	.LVL47:
 425              	.L8:
  84:src/riscv.cpp ****         __asm__ volatile ("mv a0, %0" : : "r"(res));
 426              		.loc 1 84 9 is_stmt 1
  84:src/riscv.cpp ****         __asm__ volatile ("mv a0, %0" : : "r"(res));
 427              		.loc 1 84 52 is_stmt 0
 428              	 #APP
 429              	# 84 "src/riscv.cpp" 1
  87:src/riscv.cpp ****         __asm__ volatile ("sd %0, 10*8(x8)" : : "r"(res));
 430              		mv a0, s1
 431              	# 0 "" 2
 432              		.loc 1 87 9 is_stmt 1
  87:src/riscv.cpp ****         __asm__ volatile ("sd %0, 10*8(x8)" : : "r"(res));
 433              		.loc 1 87 58 is_stmt 0
 434              	# 87 "src/riscv.cpp" 1
  89:src/riscv.cpp ****         debug_print("res=");
 435              		sd s1, 10*8(x8)
 436              	# 0 "" 2
 437              		.loc 1 89 9 is_stmt 1
  89:src/riscv.cpp ****         debug_print("res=");
 438              		.loc 1 89 20 is_stmt 0
 439              	 #NO_APP
 440 0300 17050000 		lla	a0,.LC13
 440      13050500 
 441 0308 97000000 		call	_Z11debug_printPKc
 441      E7800000 
 442              	.LVL48:
  90:src/riscv.cpp ****         debug_print(res);
 443              		.loc 1 90 9 is_stmt 1
  90:src/riscv.cpp ****         debug_print(res);
 444              		.loc 1 90 20 is_stmt 0
 445 0310 13850400 		mv	a0,s1
 446 0314 97000000 		call	_Z11debug_printm
 446      E7800000 
 447              	.LVL49:
  91:src/riscv.cpp ****         debug_print("\n");
 448              		.loc 1 91 9 is_stmt 1
  91:src/riscv.cpp ****         debug_print("\n");
 449              		.loc 1 91 20 is_stmt 0
 450 031c 17050000 		lla	a0,.LC3
 450      13050500 
 451 0324 97000000 		call	_Z11debug_printPKc
 451      E7800000 
 452              	.LVL50:
  92:src/riscv.cpp ****         debug_print("--------------------------------\n");
 453              		.loc 1 92 9 is_stmt 1
  92:src/riscv.cpp ****         debug_print("--------------------------------\n");
 454              		.loc 1 92 20 is_stmt 0
 455 032c 17050000 		lla	a0,.LC0
 455      13050500 
 456 0334 97000000 		call	_Z11debug_printPKc
GAS LISTING /tmp/cc37cDCn.s 			page 17


 456      E7800000 
 457              	.LVL51:
  94:src/riscv.cpp ****         w_sstatus(sstatus);
 458              		.loc 1 94 9 is_stmt 1
  94:src/riscv.cpp ****         w_sstatus(sstatus);
 459              		.loc 1 94 18 is_stmt 0
 460 033c 833704F7 		ld	a5,-144(s0)
 461              	.LVL52:
 462              	.LBB54:
 463              	.LBB55:
 177:src/../h/riscv.hpp **** }
 178:src/../h/riscv.hpp **** 
 179:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 180:src/../h/riscv.hpp **** {
 181:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 464              		.loc 2 181 5 is_stmt 1
 465              		.loc 2 181 77 is_stmt 0
 466              	 #APP
 467              	# 181 "src/../h/riscv.hpp" 1
 182              	}
 468              		csrw sstatus, a5
 469              	# 0 "" 2
 470              	.LVL53:
 471              	 #NO_APP
 472              	.LBE55:
 473              	.LBE54:
  95:src/riscv.cpp ****         w_sepc(sepc);
 474              		.loc 1 95 9 is_stmt 1
  95:src/riscv.cpp ****         w_sepc(sepc);
 475              		.loc 1 95 15 is_stmt 0
 476 0344 833784F6 		ld	a5,-152(s0)
 477              	.LVL54:
 478              	.LBB56:
 479              	.LBB57:
 113:src/../h/riscv.hpp **** }
 480              		.loc 2 113 5 is_stmt 1
 113:src/../h/riscv.hpp **** }
 481              		.loc 2 113 65 is_stmt 0
 482              	 #APP
 483              	# 113 "src/../h/riscv.hpp" 1
 484              		csrw sepc, a5
 485              	# 0 "" 2
 486              	 #NO_APP
 487 034c 6FF0DFD3 		j	.L3
 488              	.LVL55:
 489              	.L18:
 490              	.LBE57:
 491              	.LBE56:
  65:src/riscv.cpp ****         uint64 res = 0;
 492              		.loc 1 65 16
 493 0350 93040000 		li	s1,0
 494              	.LVL56:
 495 0354 6FF05FFA 		j	.L8
 496              	.LVL57:
 497              	.L5:
  72:src/riscv.cpp ****             case SyscallCode::MEM_FREE:
 498              		.loc 1 72 13 is_stmt 1
GAS LISTING /tmp/cc37cDCn.s 			page 18


  73:src/riscv.cpp ****                 debug_print("MEM_FREE SYSCALL\n");
 499              		.loc 1 73 17
  73:src/riscv.cpp ****                 debug_print("MEM_FREE SYSCALL\n");
 500              		.loc 1 73 28 is_stmt 0
 501 0358 17050000 		lla	a0,.LC12
 501      13050500 
 502 0360 97000000 		call	_Z11debug_printPKc
 502      E7800000 
 503              	.LVL58:
  75:src/riscv.cpp ****                 res = MemoryAllocator::getInstance()->mem_free((void*)a1);
 504              		.loc 1 75 17 is_stmt 1
  75:src/riscv.cpp ****                 res = MemoryAllocator::getInstance()->mem_free((void*)a1);
 505              		.loc 1 75 63 is_stmt 0
 506 0368 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 506      E7800000 
 507              	.LVL59:
 508 0370 93050900 		mv	a1,s2
 509 0374 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 509      E7800000 
 510              	.LVL60:
  75:src/riscv.cpp ****                 res = MemoryAllocator::getInstance()->mem_free((void*)a1);
 511              		.loc 1 75 21
 512 037c 93040500 		mv	s1,a0
 513              	.LVL61:
  76:src/riscv.cpp ****                 break;
 514              		.loc 1 76 17 is_stmt 1
 515 0380 6FF09FF7 		j	.L8
 516              	.LVL62:
 517              	.L9:
  77:src/riscv.cpp ****             case SyscallCode::MEM_GET_FREE_SPACE:
 518              		.loc 1 77 13
  78:src/riscv.cpp ****                 MemoryAllocator::getInstance()->mem_get_free_space();
 519              		.loc 1 78 17
  78:src/riscv.cpp ****                 MemoryAllocator::getInstance()->mem_get_free_space();
 520              		.loc 1 78 67 is_stmt 0
 521 0384 97000000 		call	_ZN15MemoryAllocator11getInstanceEv
 521      E7800000 
 522              	.LVL63:
 523 038c 97000000 		call	_ZN15MemoryAllocator18mem_get_free_spaceEv
 523      E7800000 
 524              	.LVL64:
  79:src/riscv.cpp ****                 break;
 525              		.loc 1 79 17 is_stmt 1
  65:src/riscv.cpp ****         uint64 res = 0;
 526              		.loc 1 65 16 is_stmt 0
 527 0394 93040000 		li	s1,0
 528              	.LVL65:
  79:src/riscv.cpp ****                 break;
 529              		.loc 1 79 17
 530 0398 6FF01FF6 		j	.L8
 531              	.LVL66:
 532              	.L15:
 533              	.LBE49:
 534              	.LBB58:
 535              	.LBB34:
 100:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 536              		.loc 1 100 9 is_stmt 1
GAS LISTING /tmp/cc37cDCn.s 			page 19


 537              	.LBB35:
 538              	.LBB36:
 147:src/../h/riscv.hpp **** }
 539              		.loc 2 147 5
 147:src/../h/riscv.hpp **** }
 540              		.loc 2 147 64 is_stmt 0
 541 039c 93072000 		li	a5,2
 542              	 #APP
 543              	# 147 "src/../h/riscv.hpp" 1
 544              		csrc sip, a5
 545              	# 0 "" 2
 546              	.LVL67:
 547              	 #NO_APP
 548              	.LBE36:
 549              	.LBE35:
 101:src/riscv.cpp ****         TCB::timeSliceCounter++;
 550              		.loc 1 101 9 is_stmt 1
 101:src/riscv.cpp ****         TCB::timeSliceCounter++;
 551              		.loc 1 101 30 is_stmt 0
 552 03a4 17070000 		lla	a4,_ZN3TCB16timeSliceCounterE
 552      13070700 
 553              	.LVL68:
 554 03ac 83370700 		ld	a5,0(a4)
 555 03b0 93871700 		addi	a5,a5,1
 556 03b4 2330F700 		sd	a5,0(a4)
 102:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 557              		.loc 1 102 9 is_stmt 1
 558              	.LBB37:
 102:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 559              		.loc 1 102 64 is_stmt 0
 560 03b8 17070000 		lla	a4,_ZN3TCB7runningE
 560      13070700 
 561 03c0 03370700 		ld	a4,0(a4)
 562              	.LVL69:
 563              	.LBB38:
 564              	.LBB39:
 565              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  20:src/../h/tcb.hpp **** 
GAS LISTING /tmp/cc37cDCn.s 			page 20


  21:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 566              		.loc 3 21 35 is_stmt 1
 567              		.loc 3 21 42 is_stmt 0
 568 03c4 03370702 		ld	a4,32(a4)
 569              	.LVL70:
 570              	.LBE39:
 571              	.LBE38:
 102:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 572              		.loc 1 102 9
 573 03c8 E3E0E7CC 		bltu	a5,a4,.L3
 574              	.LBB40:
 104:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 575              		.loc 1 104 13 is_stmt 1
 576              	.LBB41:
 577              	.LBB42:
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 578              		.loc 2 106 5
 107:src/../h/riscv.hpp ****     return sepc;
 579              		.loc 2 107 5
 107:src/../h/riscv.hpp ****     return sepc;
 580              		.loc 2 107 64 is_stmt 0
 581              	 #APP
 582              	# 107 "src/../h/riscv.hpp" 1
 583              		csrr a5, sepc
 584              	# 0 "" 2
 585              	 #NO_APP
 586 03d0 2334F4FA 		sd	a5,-88(s0)
 108:src/../h/riscv.hpp **** }
 587              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 588              		.loc 2 108 12 is_stmt 0
 589 03d4 833784FA 		ld	a5,-88(s0)
 590              	.LBE42:
 591              	.LBE41:
 104:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 592              		.loc 1 104 43
 593 03d8 233CF4F6 		sd	a5,-136(s0)
 105:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 594              		.loc 1 105 13 is_stmt 1
 595              	.LBB43:
 596              	.LBB44:
 174:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 597              		.loc 2 174 5
 175:src/../h/riscv.hpp ****     return sstatus;
 598              		.loc 2 175 5
 175:src/../h/riscv.hpp ****     return sstatus;
 599              		.loc 2 175 76 is_stmt 0
 600              	 #APP
 601              	# 175 "src/../h/riscv.hpp" 1
 602              		csrr a5, sstatus
 603              	# 0 "" 2
 604              	 #NO_APP
 605 03e0 2330F4FA 		sd	a5,-96(s0)
 176:src/../h/riscv.hpp **** }
 606              		.loc 2 176 5 is_stmt 1
 176:src/../h/riscv.hpp **** }
 607              		.loc 2 176 12 is_stmt 0
GAS LISTING /tmp/cc37cDCn.s 			page 21


 608 03e4 833704FA 		ld	a5,-96(s0)
 609              	.LBE44:
 610              	.LBE43:
 105:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 611              		.loc 1 105 49
 612 03e8 2330F4F8 		sd	a5,-128(s0)
 106:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 613              		.loc 1 106 13 is_stmt 1
 106:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 614              		.loc 1 106 35 is_stmt 0
 615 03ec 97070000 		sd	zero,_ZN3TCB16timeSliceCounterE,a5
 615      23B00700 
 107:src/riscv.cpp ****             TCB::dispatch();
 616              		.loc 1 107 13 is_stmt 1
 107:src/riscv.cpp ****             TCB::dispatch();
 617              		.loc 1 107 26 is_stmt 0
 618 03f4 97000000 		call	_ZN3TCB8dispatchEv
 618      E7800000 
 619              	.LVL71:
 108:src/riscv.cpp ****             w_sstatus(sstatus);
 620              		.loc 1 108 13 is_stmt 1
 108:src/riscv.cpp ****             w_sstatus(sstatus);
 621              		.loc 1 108 22 is_stmt 0
 622 03fc 833704F8 		ld	a5,-128(s0)
 623              	.LVL72:
 624              	.LBB45:
 625              	.LBB46:
 181:src/../h/riscv.hpp **** }
 626              		.loc 2 181 5 is_stmt 1
 181:src/../h/riscv.hpp **** }
 627              		.loc 2 181 77 is_stmt 0
 628              	 #APP
 629              	# 181 "src/../h/riscv.hpp" 1
 630              		csrw sstatus, a5
 631              	# 0 "" 2
 632              	.LVL73:
 633              	 #NO_APP
 634              	.LBE46:
 635              	.LBE45:
 109:src/riscv.cpp ****             w_sepc(sepc);
 636              		.loc 1 109 13 is_stmt 1
 109:src/riscv.cpp ****             w_sepc(sepc);
 637              		.loc 1 109 19 is_stmt 0
 638 0404 833784F7 		ld	a5,-136(s0)
 639              	.LVL74:
 640              	.LBB47:
 641              	.LBB48:
 113:src/../h/riscv.hpp **** }
 642              		.loc 2 113 5 is_stmt 1
 113:src/../h/riscv.hpp **** }
 643              		.loc 2 113 65 is_stmt 0
 644              	 #APP
 645              	# 113 "src/../h/riscv.hpp" 1
 646              		csrw sepc, a5
 647              	# 0 "" 2
 648              	 #NO_APP
 649 040c 6FF0DFC7 		j	.L3
GAS LISTING /tmp/cc37cDCn.s 			page 22


 650              	.LVL75:
 651              	.L16:
 652              	.LBE48:
 653              	.LBE47:
 654              	.LBE40:
 655              	.LBE37:
 656              	.LBE34:
 115:src/riscv.cpp ****         console_handler();
 657              		.loc 1 115 9 is_stmt 1
 115:src/riscv.cpp ****         console_handler();
 658              		.loc 1 115 24 is_stmt 0
 659 0410 97000000 		call	console_handler
 659      E7800000 
 660              	.LVL76:
 661              	.LBE58:
 662              	.LBE60:
 663              		.loc 1 121 1
 664 0418 6FF01FC7 		j	.L3
 665              		.cfi_endproc
 666              	.LFE34:
 668              		.section	.rodata.str1.8,"aMS",@progbits,1
 669              		.align	3
 670              	.LC0:
 671 0000 2D2D2D2D 		.string	"--------------------------------\n"
 671      2D2D2D2D 
 671      2D2D2D2D 
 671      2D2D2D2D 
 671      2D2D2D2D 
 672 0022 00000000 		.zero	6
 672      0000
 673              	.LC1:
 674 0028 53595343 		.string	"SYSCALL!\n"
 674      414C4C21 
 674      0A00
 675 0032 00000000 		.zero	6
 675      0000
 676              	.LC2:
 677 0038 61303D00 		.string	"a0="
 678 003c 00000000 		.zero	4
 679              	.LC3:
 680 0040 0A00     		.string	"\n"
 681 0042 00000000 		.zero	6
 681      0000
 682              	.LC4:
 683 0048 61313D00 		.string	"a1="
 684 004c 00000000 		.zero	4
 685              	.LC5:
 686 0050 61323D00 		.string	"a2="
 687 0054 00000000 		.zero	4
 688              	.LC6:
 689 0058 61333D00 		.string	"a3="
 690 005c 00000000 		.zero	4
 691              	.LC7:
 692 0060 61343D00 		.string	"a4="
 693 0064 00000000 		.zero	4
 694              	.LC8:
 695 0068 61353D00 		.string	"a5="
GAS LISTING /tmp/cc37cDCn.s 			page 23


 696 006c 00000000 		.zero	4
 697              	.LC9:
 698 0070 61363D00 		.string	"a6="
 699 0074 00000000 		.zero	4
 700              	.LC10:
 701 0078 61373D00 		.string	"a7="
 702 007c 00000000 		.zero	4
 703              	.LC11:
 704 0080 4D454D5F 		.string	"MEM_ALLOC SYSCALL\n"
 704      414C4C4F 
 704      43205359 
 704      5343414C 
 704      4C0A00
 705 0093 00000000 		.zero	5
 705      00
 706              	.LC12:
 707 0098 4D454D5F 		.string	"MEM_FREE SYSCALL\n"
 707      46524545 
 707      20535953 
 707      43414C4C 
 707      0A00
 708 00aa 00000000 		.zero	6
 708      0000
 709              	.LC13:
 710 00b0 7265733D 		.string	"res="
 710      00
 711              		.text
 712              	.Letext0:
 713              		.file 4 "src/../h/../lib/hw.h"
 714              		.file 5 "src/../h/mem.hpp"
 715              		.file 6 "src/../h/syscall_c.hpp"
 716              		.file 7 "src/../h/print.hpp"
 717              		.file 8 "src/../lib/console.h"
GAS LISTING /tmp/cc37cDCn.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cc37cDCn.s:12     .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc37cDCn.s:16     .text:0000000000000000 .L0 
     /tmp/cc37cDCn.s:17     .text:0000000000000000 .L0 
     /tmp/cc37cDCn.s:18     .text:0000000000000004 .L0 
     /tmp/cc37cDCn.s:20     .text:0000000000000008 .L0 
     /tmp/cc37cDCn.s:22     .text:000000000000000c .L0 
     /tmp/cc37cDCn.s:24     .text:000000000000000c .L0 
       src/riscv.cpp:13     .text:000000000000000c .L0 
     /tmp/cc37cDCn.s:30     .text:0000000000000010 .L0 
       src/riscv.cpp:14     .text:0000000000000010 .L0 
     /tmp/cc37cDCn.s:36     .text:0000000000000014 .L0 
     /tmp/cc37cDCn.s:37     .text:0000000000000018 .L0 
     /tmp/cc37cDCn.s:38     .text:0000000000000018 .L0 
     /tmp/cc37cDCn.s:40     .text:000000000000001c .L0 
     /tmp/cc37cDCn.s:42     .text:0000000000000020 .L0 
     /tmp/cc37cDCn.s:48     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc37cDCn.s:51     .text:0000000000000020 .L0 
     /tmp/cc37cDCn.s:52     .text:0000000000000020 .L0 
     /tmp/cc37cDCn.s:53     .text:0000000000000024 .L0 
     /tmp/cc37cDCn.s:64     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:65     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:66     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:67     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:68     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:69     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:70     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:71     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:72     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:73     .text:000000000000004c .L0 
     /tmp/cc37cDCn.s:75     .text:0000000000000050 .L0 
     /tmp/cc37cDCn.s:80     .text:0000000000000050 .L0 
     /tmp/cc37cDCn.s:81     .text:0000000000000050 .L0 
     /tmp/cc37cDCn.s:82     .text:0000000000000050 .L0 
  src/../h/riscv.hpp:95     .text:0000000000000050 .L0 
     /tmp/cc37cDCn.s:90     .text:0000000000000058 .L0 
     /tmp/cc37cDCn.s:91     .text:0000000000000058 .L0 
     /tmp/cc37cDCn.s:97     .text:000000000000005c .L0 
     /tmp/cc37cDCn.s:98     .text:000000000000005c .L0 
     /tmp/cc37cDCn.s:100    .text:0000000000000060 .L0 
     /tmp/cc37cDCn.s:106    .text:0000000000000068 .L0 
     /tmp/cc37cDCn.s:111    .text:0000000000000078 .L0 
     /tmp/cc37cDCn.s:120    .text:0000000000000088 .L0 
     /tmp/cc37cDCn.s:121    .text:000000000000008c .L0 
     /tmp/cc37cDCn.s:122    .text:000000000000008c .L0 
     /tmp/cc37cDCn.s:124    .text:0000000000000090 .L0 
     /tmp/cc37cDCn.s:125    .text:0000000000000090 .L0 
     /tmp/cc37cDCn.s:127    .text:0000000000000094 .L0 
     /tmp/cc37cDCn.s:129    .text:0000000000000098 .L0 
     /tmp/cc37cDCn.s:131    .text:000000000000009c .L0 
     /tmp/cc37cDCn.s:133    .text:00000000000000a0 .L0 
     /tmp/cc37cDCn.s:135    .text:00000000000000a4 .L0 
     /tmp/cc37cDCn.s:137    .text:00000000000000a8 .L0 
     /tmp/cc37cDCn.s:139    .text:00000000000000ac .L0 
     /tmp/cc37cDCn.s:141    .text:00000000000000b0 .L0 
     /tmp/cc37cDCn.s:143    .text:00000000000000b4 .L0 
GAS LISTING /tmp/cc37cDCn.s 			page 25


     /tmp/cc37cDCn.s:147    .text:00000000000000b8 .L0 
     /tmp/cc37cDCn.s:153    .text:00000000000000b8 .L0 
     /tmp/cc37cDCn.s:154    .text:00000000000000b8 .L0 
     /tmp/cc37cDCn.s:155    .text:00000000000000b8 .L0 
  src/../h/riscv.hpp:107    .text:00000000000000b8 .L0 
     /tmp/cc37cDCn.s:163    .text:00000000000000c0 .L0 
     /tmp/cc37cDCn.s:164    .text:00000000000000c0 .L0 
     /tmp/cc37cDCn.s:168    .text:00000000000000c4 .L0 
     /tmp/cc37cDCn.s:170    .text:00000000000000c8 .L0 
     /tmp/cc37cDCn.s:174    .text:00000000000000cc .L0 
     /tmp/cc37cDCn.s:175    .text:00000000000000cc .L0 
     /tmp/cc37cDCn.s:176    .text:00000000000000cc .L0 
  src/../h/riscv.hpp:175    .text:00000000000000cc .L0 
     /tmp/cc37cDCn.s:184    .text:00000000000000d4 .L0 
     /tmp/cc37cDCn.s:185    .text:00000000000000d4 .L0 
     /tmp/cc37cDCn.s:189    .text:00000000000000d8 .L0 
     /tmp/cc37cDCn.s:191    .text:00000000000000dc .L0 
     /tmp/cc37cDCn.s:192    .text:00000000000000dc .L0 
       src/riscv.cpp:28     .text:00000000000000dc .L0 
     /tmp/cc37cDCn.s:199    .text:00000000000000e0 .L0 
       src/riscv.cpp:29     .text:00000000000000e0 .L0 
     /tmp/cc37cDCn.s:205    .text:00000000000000e4 .L0 
       src/riscv.cpp:30     .text:00000000000000e4 .L0 
     /tmp/cc37cDCn.s:211    .text:00000000000000e8 .L0 
       src/riscv.cpp:31     .text:00000000000000e8 .L0 
     /tmp/cc37cDCn.s:217    .text:00000000000000ec .L0 
       src/riscv.cpp:32     .text:00000000000000ec .L0 
     /tmp/cc37cDCn.s:223    .text:00000000000000f0 .L0 
       src/riscv.cpp:33     .text:00000000000000f0 .L0 
     /tmp/cc37cDCn.s:229    .text:00000000000000f4 .L0 
       src/riscv.cpp:34     .text:00000000000000f4 .L0 
     /tmp/cc37cDCn.s:235    .text:00000000000000f8 .L0 
       src/riscv.cpp:35     .text:00000000000000f8 .L0 
     /tmp/cc37cDCn.s:241    .text:00000000000000fc .L0 
     /tmp/cc37cDCn.s:243    .text:00000000000000fc .L0 
     /tmp/cc37cDCn.s:247    .text:000000000000010c .L0 
     /tmp/cc37cDCn.s:248    .text:000000000000010c .L0 
     /tmp/cc37cDCn.s:252    .text:000000000000011c .L0 
     /tmp/cc37cDCn.s:253    .text:000000000000011c .L0 
     /tmp/cc37cDCn.s:257    .text:000000000000012c .L0 
     /tmp/cc37cDCn.s:258    .text:000000000000012c .L0 
     /tmp/cc37cDCn.s:262    .text:0000000000000138 .L0 
     /tmp/cc37cDCn.s:263    .text:0000000000000138 .L0 
     /tmp/cc37cDCn.s:267    .text:0000000000000148 .L0 
     /tmp/cc37cDCn.s:268    .text:0000000000000148 .L0 
     /tmp/cc37cDCn.s:272    .text:0000000000000158 .L0 
     /tmp/cc37cDCn.s:273    .text:0000000000000158 .L0 
     /tmp/cc37cDCn.s:277    .text:0000000000000164 .L0 
     /tmp/cc37cDCn.s:278    .text:0000000000000164 .L0 
     /tmp/cc37cDCn.s:282    .text:0000000000000174 .L0 
     /tmp/cc37cDCn.s:283    .text:0000000000000174 .L0 
     /tmp/cc37cDCn.s:287    .text:0000000000000184 .L0 
     /tmp/cc37cDCn.s:288    .text:0000000000000184 .L0 
     /tmp/cc37cDCn.s:292    .text:0000000000000190 .L0 
     /tmp/cc37cDCn.s:293    .text:0000000000000190 .L0 
     /tmp/cc37cDCn.s:297    .text:00000000000001a0 .L0 
     /tmp/cc37cDCn.s:298    .text:00000000000001a0 .L0 
GAS LISTING /tmp/cc37cDCn.s 			page 26


     /tmp/cc37cDCn.s:302    .text:00000000000001b0 .L0 
     /tmp/cc37cDCn.s:303    .text:00000000000001b0 .L0 
     /tmp/cc37cDCn.s:307    .text:00000000000001bc .L0 
     /tmp/cc37cDCn.s:308    .text:00000000000001bc .L0 
     /tmp/cc37cDCn.s:312    .text:00000000000001cc .L0 
     /tmp/cc37cDCn.s:313    .text:00000000000001cc .L0 
     /tmp/cc37cDCn.s:317    .text:00000000000001dc .L0 
     /tmp/cc37cDCn.s:318    .text:00000000000001dc .L0 
     /tmp/cc37cDCn.s:322    .text:00000000000001e8 .L0 
     /tmp/cc37cDCn.s:323    .text:00000000000001e8 .L0 
     /tmp/cc37cDCn.s:327    .text:00000000000001f8 .L0 
     /tmp/cc37cDCn.s:328    .text:00000000000001f8 .L0 
     /tmp/cc37cDCn.s:332    .text:0000000000000208 .L0 
     /tmp/cc37cDCn.s:333    .text:0000000000000208 .L0 
     /tmp/cc37cDCn.s:337    .text:0000000000000214 .L0 
     /tmp/cc37cDCn.s:338    .text:0000000000000214 .L0 
     /tmp/cc37cDCn.s:342    .text:0000000000000224 .L0 
     /tmp/cc37cDCn.s:343    .text:0000000000000224 .L0 
     /tmp/cc37cDCn.s:347    .text:0000000000000234 .L0 
     /tmp/cc37cDCn.s:348    .text:0000000000000234 .L0 
     /tmp/cc37cDCn.s:352    .text:0000000000000240 .L0 
     /tmp/cc37cDCn.s:353    .text:0000000000000240 .L0 
     /tmp/cc37cDCn.s:357    .text:0000000000000250 .L0 
     /tmp/cc37cDCn.s:358    .text:0000000000000250 .L0 
     /tmp/cc37cDCn.s:362    .text:0000000000000260 .L0 
     /tmp/cc37cDCn.s:363    .text:0000000000000260 .L0 
     /tmp/cc37cDCn.s:367    .text:000000000000026c .L0 
     /tmp/cc37cDCn.s:368    .text:000000000000026c .L0 
     /tmp/cc37cDCn.s:372    .text:000000000000027c .L0 
     /tmp/cc37cDCn.s:373    .text:000000000000027c .L0 
     /tmp/cc37cDCn.s:377    .text:000000000000028c .L0 
     /tmp/cc37cDCn.s:378    .text:000000000000028c .L0 
     /tmp/cc37cDCn.s:386    .text:00000000000002a8 .L0 
     /tmp/cc37cDCn.s:387    .text:00000000000002a8 .L0 
     /tmp/cc37cDCn.s:388    .text:00000000000002a8 .L0 
     /tmp/cc37cDCn.s:393    .text:00000000000002b8 .L0 
     /tmp/cc37cDCn.s:394    .text:00000000000002b8 .L0 
     /tmp/cc37cDCn.s:397    .text:00000000000002bc .L0 
     /tmp/cc37cDCn.s:401    .text:00000000000002c0 .L0 
     /tmp/cc37cDCn.s:404    .text:00000000000002c8 .L0 
     /tmp/cc37cDCn.s:405    .text:00000000000002c8 .L0 
     /tmp/cc37cDCn.s:406    .text:00000000000002c8 .L0 
     /tmp/cc37cDCn.s:410    .text:00000000000002d8 .L0 
     /tmp/cc37cDCn.s:411    .text:00000000000002d8 .L0 
     /tmp/cc37cDCn.s:419    .text:00000000000002f0 .L0 
     /tmp/cc37cDCn.s:423    .text:00000000000002f4 .L0 
     /tmp/cc37cDCn.s:427    .text:00000000000002f8 .L0 
       src/riscv.cpp:84     .text:00000000000002f8 .L0 
     /tmp/cc37cDCn.s:433    .text:00000000000002fc .L0 
       src/riscv.cpp:87     .text:00000000000002fc .L0 
     /tmp/cc37cDCn.s:438    .text:0000000000000300 .L0 
     /tmp/cc37cDCn.s:440    .text:0000000000000300 .L0 
     /tmp/cc37cDCn.s:444    .text:0000000000000310 .L0 
     /tmp/cc37cDCn.s:445    .text:0000000000000310 .L0 
     /tmp/cc37cDCn.s:449    .text:000000000000031c .L0 
     /tmp/cc37cDCn.s:450    .text:000000000000031c .L0 
     /tmp/cc37cDCn.s:454    .text:000000000000032c .L0 
GAS LISTING /tmp/cc37cDCn.s 			page 27


     /tmp/cc37cDCn.s:455    .text:000000000000032c .L0 
     /tmp/cc37cDCn.s:459    .text:000000000000033c .L0 
     /tmp/cc37cDCn.s:460    .text:000000000000033c .L0 
     /tmp/cc37cDCn.s:465    .text:0000000000000340 .L0 
  src/../h/riscv.hpp:181    .text:0000000000000340 .L0 
     /tmp/cc37cDCn.s:475    .text:0000000000000344 .L0 
     /tmp/cc37cDCn.s:476    .text:0000000000000344 .L0 
     /tmp/cc37cDCn.s:481    .text:0000000000000348 .L0 
  src/../h/riscv.hpp:113    .text:0000000000000348 .L0 
     /tmp/cc37cDCn.s:493    .text:0000000000000350 .L0 
     /tmp/cc37cDCn.s:499    .text:0000000000000358 .L0 
     /tmp/cc37cDCn.s:500    .text:0000000000000358 .L0 
     /tmp/cc37cDCn.s:501    .text:0000000000000358 .L0 
     /tmp/cc37cDCn.s:505    .text:0000000000000368 .L0 
     /tmp/cc37cDCn.s:506    .text:0000000000000368 .L0 
     /tmp/cc37cDCn.s:512    .text:000000000000037c .L0 
     /tmp/cc37cDCn.s:515    .text:0000000000000380 .L0 
     /tmp/cc37cDCn.s:519    .text:0000000000000384 .L0 
     /tmp/cc37cDCn.s:520    .text:0000000000000384 .L0 
     /tmp/cc37cDCn.s:521    .text:0000000000000384 .L0 
     /tmp/cc37cDCn.s:526    .text:0000000000000394 .L0 
     /tmp/cc37cDCn.s:527    .text:0000000000000394 .L0 
     /tmp/cc37cDCn.s:530    .text:0000000000000398 .L0 
     /tmp/cc37cDCn.s:539    .text:000000000000039c .L0 
     /tmp/cc37cDCn.s:540    .text:000000000000039c .L0 
     /tmp/cc37cDCn.s:541    .text:000000000000039c .L0 
     /tmp/cc37cDCn.s:551    .text:00000000000003a4 .L0 
     /tmp/cc37cDCn.s:552    .text:00000000000003a4 .L0 
     /tmp/cc37cDCn.s:559    .text:00000000000003b8 .L0 
     /tmp/cc37cDCn.s:560    .text:00000000000003b8 .L0 
     /tmp/cc37cDCn.s:567    .text:00000000000003c4 .L0 
     /tmp/cc37cDCn.s:568    .text:00000000000003c4 .L0 
     /tmp/cc37cDCn.s:573    .text:00000000000003c8 .L0 
     /tmp/cc37cDCn.s:578    .text:00000000000003cc .L0 
     /tmp/cc37cDCn.s:579    .text:00000000000003cc .L0 
     /tmp/cc37cDCn.s:580    .text:00000000000003cc .L0 
  src/../h/riscv.hpp:107    .text:00000000000003cc .L0 
     /tmp/cc37cDCn.s:588    .text:00000000000003d4 .L0 
     /tmp/cc37cDCn.s:589    .text:00000000000003d4 .L0 
     /tmp/cc37cDCn.s:593    .text:00000000000003d8 .L0 
     /tmp/cc37cDCn.s:597    .text:00000000000003dc .L0 
     /tmp/cc37cDCn.s:598    .text:00000000000003dc .L0 
     /tmp/cc37cDCn.s:599    .text:00000000000003dc .L0 
  src/../h/riscv.hpp:175    .text:00000000000003dc .L0 
     /tmp/cc37cDCn.s:607    .text:00000000000003e4 .L0 
     /tmp/cc37cDCn.s:608    .text:00000000000003e4 .L0 
     /tmp/cc37cDCn.s:612    .text:00000000000003e8 .L0 
     /tmp/cc37cDCn.s:614    .text:00000000000003ec .L0 
     /tmp/cc37cDCn.s:615    .text:00000000000003ec .L0 
     /tmp/cc37cDCn.s:617    .text:00000000000003f4 .L0 
     /tmp/cc37cDCn.s:618    .text:00000000000003f4 .L0 
     /tmp/cc37cDCn.s:621    .text:00000000000003fc .L0 
     /tmp/cc37cDCn.s:622    .text:00000000000003fc .L0 
     /tmp/cc37cDCn.s:627    .text:0000000000000400 .L0 
  src/../h/riscv.hpp:181    .text:0000000000000400 .L0 
     /tmp/cc37cDCn.s:637    .text:0000000000000404 .L0 
     /tmp/cc37cDCn.s:638    .text:0000000000000404 .L0 
GAS LISTING /tmp/cc37cDCn.s 			page 28


     /tmp/cc37cDCn.s:643    .text:0000000000000408 .L0 
  src/../h/riscv.hpp:113    .text:0000000000000408 .L0 
     /tmp/cc37cDCn.s:658    .text:0000000000000410 .L0 
     /tmp/cc37cDCn.s:659    .text:0000000000000410 .L0 
     /tmp/cc37cDCn.s:664    .text:0000000000000418 .L0 
     /tmp/cc37cDCn.s:665    .text:000000000000041c .L0 
     /tmp/cc37cDCn.s:718    .text:000000000000041c .L0 
     /tmp/cc37cDCn.s:670    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc37cDCn.s:243    .text:00000000000000fc .L0 
     /tmp/cc37cDCn.s:673    .rodata.str1.8:0000000000000028 .LC1
     /tmp/cc37cDCn.s:248    .text:000000000000010c .L0 
     /tmp/cc37cDCn.s:676    .rodata.str1.8:0000000000000038 .LC2
     /tmp/cc37cDCn.s:253    .text:000000000000011c .L0 
     /tmp/cc37cDCn.s:679    .rodata.str1.8:0000000000000040 .LC3
     /tmp/cc37cDCn.s:263    .text:0000000000000138 .L0 
     /tmp/cc37cDCn.s:682    .rodata.str1.8:0000000000000048 .LC4
     /tmp/cc37cDCn.s:268    .text:0000000000000148 .L0 
     /tmp/cc37cDCn.s:278    .text:0000000000000164 .L0 
     /tmp/cc37cDCn.s:685    .rodata.str1.8:0000000000000050 .LC5
     /tmp/cc37cDCn.s:283    .text:0000000000000174 .L0 
     /tmp/cc37cDCn.s:293    .text:0000000000000190 .L0 
     /tmp/cc37cDCn.s:688    .rodata.str1.8:0000000000000058 .LC6
     /tmp/cc37cDCn.s:298    .text:00000000000001a0 .L0 
     /tmp/cc37cDCn.s:308    .text:00000000000001bc .L0 
     /tmp/cc37cDCn.s:691    .rodata.str1.8:0000000000000060 .LC7
     /tmp/cc37cDCn.s:313    .text:00000000000001cc .L0 
     /tmp/cc37cDCn.s:323    .text:00000000000001e8 .L0 
     /tmp/cc37cDCn.s:694    .rodata.str1.8:0000000000000068 .LC8
     /tmp/cc37cDCn.s:328    .text:00000000000001f8 .L0 
     /tmp/cc37cDCn.s:338    .text:0000000000000214 .L0 
     /tmp/cc37cDCn.s:697    .rodata.str1.8:0000000000000070 .LC9
     /tmp/cc37cDCn.s:343    .text:0000000000000224 .L0 
     /tmp/cc37cDCn.s:353    .text:0000000000000240 .L0 
     /tmp/cc37cDCn.s:700    .rodata.str1.8:0000000000000078 .LC10
     /tmp/cc37cDCn.s:358    .text:0000000000000250 .L0 
     /tmp/cc37cDCn.s:368    .text:000000000000026c .L0 
     /tmp/cc37cDCn.s:373    .text:000000000000027c .L0 
     /tmp/cc37cDCn.s:703    .rodata.str1.8:0000000000000080 .LC11
     /tmp/cc37cDCn.s:406    .text:00000000000002c8 .L0 
     /tmp/cc37cDCn.s:709    .rodata.str1.8:00000000000000b0 .LC13
     /tmp/cc37cDCn.s:440    .text:0000000000000300 .L0 
     /tmp/cc37cDCn.s:450    .text:000000000000031c .L0 
     /tmp/cc37cDCn.s:455    .text:000000000000032c .L0 
     /tmp/cc37cDCn.s:706    .rodata.str1.8:0000000000000098 .LC12
     /tmp/cc37cDCn.s:501    .text:0000000000000358 .L0 
     /tmp/cc37cDCn.s:552    .text:00000000000003a4 .L0 
     /tmp/cc37cDCn.s:560    .text:00000000000003b8 .L0 
     /tmp/cc37cDCn.s:615    .text:00000000000003ec .L0 
     /tmp/cc37cDCn.s:146    .text:00000000000000b8 .L14
     /tmp/cc37cDCn.s:532    .text:000000000000039c .L15
     /tmp/cc37cDCn.s:651    .text:0000000000000410 .L16
     /tmp/cc37cDCn.s:497    .text:0000000000000358 .L5
     /tmp/cc37cDCn.s:399    .text:00000000000002c0 .L17
     /tmp/cc37cDCn.s:517    .text:0000000000000384 .L9
     /tmp/cc37cDCn.s:489    .text:0000000000000350 .L18
     /tmp/cc37cDCn.s:425    .text:00000000000002f8 .L8
     /tmp/cc37cDCn.s:421    .text:00000000000002f4 .L19
GAS LISTING /tmp/cc37cDCn.s 			page 29


     /tmp/cc37cDCn.s:116    .text:0000000000000088 .L3
     /tmp/cc37cDCn.s:2346   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc37cDCn.s:3739   .debug_str:0000000000000470 .LASF131
     /tmp/cc37cDCn.s:3773   .debug_str:00000000000005e9 .LASF132
     /tmp/cc37cDCn.s:3721   .debug_str:00000000000003e4 .LASF133
     /tmp/cc37cDCn.s:8      .text:0000000000000000 .Ltext0
     /tmp/cc37cDCn.s:712    .text:000000000000041c .Letext0
     /tmp/cc37cDCn.s:3597   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc37cDCn.s:3751   .debug_str:0000000000000577 .LASF0
     /tmp/cc37cDCn.s:3769   .debug_str:00000000000005c3 .LASF1
     /tmp/cc37cDCn.s:3731   .debug_str:0000000000000441 .LASF2
     /tmp/cc37cDCn.s:3701   .debug_str:0000000000000357 .LASF4
     /tmp/cc37cDCn.s:3807   .debug_str:00000000000006c7 .LASF3
     /tmp/cc37cDCn.s:3623   .debug_str:0000000000000099 .LASF5
     /tmp/cc37cDCn.s:3771   .debug_str:00000000000005d6 .LASF6
     /tmp/cc37cDCn.s:3749   .debug_str:0000000000000564 .LASF7
     /tmp/cc37cDCn.s:3845   .debug_str:00000000000007e5 .LASF8
     /tmp/cc37cDCn.s:3687   .debug_str:00000000000002d2 .LASF9
     /tmp/cc37cDCn.s:3783   .debug_str:000000000000062f .LASF10
     /tmp/cc37cDCn.s:3837   .debug_str:00000000000007a0 .LASF11
     /tmp/cc37cDCn.s:3625   .debug_str:00000000000000a0 .LASF12
     /tmp/cc37cDCn.s:3605   .debug_str:0000000000000022 .LASF13
     /tmp/cc37cDCn.s:3637   .debug_str:0000000000000111 .LASF14
     /tmp/cc37cDCn.s:3799   .debug_str:0000000000000687 .LASF15
     /tmp/cc37cDCn.s:3649   .debug_str:0000000000000184 .LASF16
     /tmp/cc37cDCn.s:3765   .debug_str:00000000000005b2 .LASF56
     /tmp/cc37cDCn.s:3715   .debug_str:00000000000003c0 .LASF134
     /tmp/cc37cDCn.s:3821   .debug_str:000000000000072d .LASF17
     /tmp/cc37cDCn.s:3763   .debug_str:00000000000005a9 .LASF18
     /tmp/cc37cDCn.s:3709   .debug_str:000000000000038d .LASF19
     /tmp/cc37cDCn.s:3797   .debug_str:000000000000067c .LASF52
     /tmp/cc37cDCn.s:3867   .debug_str:00000000000008a9 .LASF54
     /tmp/cc37cDCn.s:3607   .debug_str:0000000000000032 .LASF20
     /tmp/cc37cDCn.s:3665   .debug_str:000000000000020d .LASF22
     /tmp/cc37cDCn.s:3661   .debug_str:00000000000001fc .LASF24
     /tmp/cc37cDCn.s:3659   .debug_str:00000000000001e7 .LASF26
     /tmp/cc37cDCn.s:3811   .debug_str:00000000000006ea .LASF21
     /tmp/cc37cDCn.s:3787   .debug_str:0000000000000647 .LASF23
     /tmp/cc37cDCn.s:3831   .debug_str:0000000000000785 .LASF25
     /tmp/cc37cDCn.s:3825   .debug_str:000000000000074e .LASF27
     /tmp/cc37cDCn.s:3679   .debug_str:00000000000002a7 .LASF28
     /tmp/cc37cDCn.s:3651   .debug_str:000000000000019a .LASF29
     /tmp/cc37cDCn.s:3601   .debug_str:000000000000000a .LASF30
     /tmp/cc37cDCn.s:3693   .debug_str:0000000000000300 .LASF31
     /tmp/cc37cDCn.s:3833   .debug_str:000000000000078c .LASF32
     /tmp/cc37cDCn.s:3629   .debug_str:00000000000000bb .LASF33
     /tmp/cc37cDCn.s:3873   .debug_str:00000000000008d1 .LASF34
     /tmp/cc37cDCn.s:3667   .debug_str:0000000000000222 .LASF35
     /tmp/cc37cDCn.s:3753   .debug_str:0000000000000584 .LASF36
     /tmp/cc37cDCn.s:3863   .debug_str:0000000000000891 .LASF37
     /tmp/cc37cDCn.s:3615   .debug_str:0000000000000050 .LASF38
     /tmp/cc37cDCn.s:3677   .debug_str:0000000000000294 .LASF39
     /tmp/cc37cDCn.s:3683   .debug_str:00000000000002b5 .LASF40
     /tmp/cc37cDCn.s:3829   .debug_str:0000000000000773 .LASF41
     /tmp/cc37cDCn.s:3613   .debug_str:000000000000004a .LASF42
     /tmp/cc37cDCn.s:3879   .debug_str:0000000000000923 .LASF43
     /tmp/cc37cDCn.s:3871   .debug_str:00000000000008c6 .LASF44
GAS LISTING /tmp/cc37cDCn.s 			page 30


     /tmp/cc37cDCn.s:3805   .debug_str:00000000000006af .LASF45
     /tmp/cc37cDCn.s:3767   .debug_str:00000000000005b8 .LASF46
     /tmp/cc37cDCn.s:3823   .debug_str:0000000000000736 .LASF47
     /tmp/cc37cDCn.s:3635   .debug_str:0000000000000107 .LASF48
     /tmp/cc37cDCn.s:3697   .debug_str:0000000000000319 .LASF49
     /tmp/cc37cDCn.s:3737   .debug_str:0000000000000466 .LASF50
     /tmp/cc37cDCn.s:3691   .debug_str:00000000000002ea .LASF51
     /tmp/cc37cDCn.s:3813   .debug_str:00000000000006f1 .LASF53
     /tmp/cc37cDCn.s:3631   .debug_str:00000000000000cf .LASF55
     /tmp/cc37cDCn.s:3849   .debug_str:00000000000007ff .LASF74
     /tmp/cc37cDCn.s:3713   .debug_str:000000000000039e .LASF76
     /tmp/cc37cDCn.s:3611   .debug_str:0000000000000042 .LASF135
     /tmp/cc37cDCn.s:3695   .debug_str:0000000000000314 .LASF57
     /tmp/cc37cDCn.s:3789   .debug_str:000000000000065a .LASF59
     /tmp/cc37cDCn.s:3775   .debug_str:00000000000005f7 .LASF61
     /tmp/cc37cDCn.s:3685   .debug_str:00000000000002bb .LASF63
     /tmp/cc37cDCn.s:3733   .debug_str:000000000000044f .LASF58
     /tmp/cc37cDCn.s:3875   .debug_str:00000000000008d9 .LASF60
     /tmp/cc37cDCn.s:3727   .debug_str:0000000000000426 .LASF62
     /tmp/cc37cDCn.s:3619   .debug_str:000000000000005c .LASF64
     /tmp/cc37cDCn.s:3647   .debug_str:0000000000000177 .LASF65
     /tmp/cc37cDCn.s:3723   .debug_str:00000000000003f7 .LASF66
     /tmp/cc37cDCn.s:3793   .debug_str:000000000000066e .LASF136
     /tmp/cc37cDCn.s:3801   .debug_str:000000000000069d .LASF67
     /tmp/cc37cDCn.s:3653   .debug_str:00000000000001ae .LASF68
     /tmp/cc37cDCn.s:3663   .debug_str:0000000000000205 .LASF113
     /tmp/cc37cDCn.s:3815   .debug_str:0000000000000700 .LASF137
     /tmp/cc37cDCn.s:3707   .debug_str:0000000000000388 .LASF69
     /tmp/cc37cDCn.s:3757   .debug_str:0000000000000594 .LASF70
     /tmp/cc37cDCn.s:3711   .debug_str:0000000000000396 .LASF71
     /tmp/cc37cDCn.s:3761   .debug_str:000000000000059f .LASF72
     /tmp/cc37cDCn.s:3705   .debug_str:000000000000037f .LASF73
     /tmp/cc37cDCn.s:3729   .debug_str:0000000000000433 .LASF75
     /tmp/cc37cDCn.s:3855   .debug_str:0000000000000843 .LASF77
     /tmp/cc37cDCn.s:3853   .debug_str:0000000000000835 .LASF119
     /tmp/cc37cDCn.s:3699   .debug_str:000000000000032f .LASF121
     /tmp/cc37cDCn.s:3755   .debug_str:000000000000058b .LASF78
     /tmp/cc37cDCn.s:3669   .debug_str:0000000000000236 .LASF79
     /tmp/cc37cDCn.s:3809   .debug_str:00000000000006d9 .LASF110
     /tmp/cc37cDCn.s:3719   .debug_str:00000000000003d9 .LASF80
     /tmp/cc37cDCn.s:3857   .debug_str:000000000000085c .LASF81
     /tmp/cc37cDCn.s:3671   .debug_str:0000000000000249 .LASF82
     /tmp/cc37cDCn.s:3781   .debug_str:0000000000000623 .LASF138
     /tmp/cc37cDCn.s:3689   .debug_str:00000000000002e0 .LASF83
     /tmp/cc37cDCn.s:3795   .debug_str:0000000000000673 .LASF84
     /tmp/cc37cDCn.s:3725   .debug_str:0000000000000413 .LASF85
     /tmp/cc37cDCn.s:3675   .debug_str:0000000000000279 .LASF86
     /tmp/cc37cDCn.s:3717   .debug_str:00000000000003cb .LASF87
     /tmp/cc37cDCn.s:3803   .debug_str:00000000000006a3 .LASF88
     /tmp/cc37cDCn.s:3641   .debug_str:0000000000000122 .LASF89
     /tmp/cc37cDCn.s:3843   .debug_str:00000000000007dc .LASF90
     /tmp/cc37cDCn.s:3599   .debug_str:0000000000000000 .LASF91
     /tmp/cc37cDCn.s:3817   .debug_str:0000000000000711 .LASF92
     /tmp/cc37cDCn.s:3627   .debug_str:00000000000000b0 .LASF93
     /tmp/cc37cDCn.s:3735   .debug_str:000000000000045b .LASF94
     /tmp/cc37cDCn.s:3617   .debug_str:0000000000000057 .LASF95
     /tmp/cc37cDCn.s:3869   .debug_str:00000000000008c1 .LASF96
GAS LISTING /tmp/cc37cDCn.s 			page 31


     /tmp/cc37cDCn.s:3745   .debug_str:000000000000054a .LASF97
     /tmp/cc37cDCn.s:3747   .debug_str:000000000000055a .LASF139
     /tmp/cc37cDCn.s:3777   .debug_str:0000000000000602 .LASF98
     /tmp/cc37cDCn.s:3681   .debug_str:00000000000002af .LASF99
     /tmp/cc37cDCn.s:3835   .debug_str:0000000000000794 .LASF100
     /tmp/cc37cDCn.s:3621   .debug_str:0000000000000075 .LASF101
     /tmp/cc37cDCn.s:3847   .debug_str:00000000000007f5 .LASF102
     /tmp/cc37cDCn.s:3851   .debug_str:0000000000000814 .LASF103
     /tmp/cc37cDCn.s:3785   .debug_str:000000000000063e .LASF104
     /tmp/cc37cDCn.s:3703   .debug_str:000000000000035e .LASF105
     /tmp/cc37cDCn.s:3859   .debug_str:0000000000000867 .LASF106
     /tmp/cc37cDCn.s:3673   .debug_str:000000000000024e .LASF107
     /tmp/cc37cDCn.s:3779   .debug_str:0000000000000608 .LASF108
     /tmp/cc37cDCn.s:3877   .debug_str:00000000000008f0 .LASF109
     /tmp/cc37cDCn.s:3645   .debug_str:000000000000016d .LASF111
     /tmp/cc37cDCn.s:3603   .debug_str:0000000000000012 .LASF112
     /tmp/cc37cDCn.s:3861   .debug_str:000000000000087a .LASF114
     /tmp/cc37cDCn.s:3657   .debug_str:00000000000001ce .LASF115
     /tmp/cc37cDCn.s:3841   .debug_str:00000000000007c0 .LASF116
     /tmp/cc37cDCn.s:3743   .debug_str:0000000000000540 .LASF117
     /tmp/cc37cDCn.s:3633   .debug_str:00000000000000eb .LASF118
     /tmp/cc37cDCn.s:3827   .debug_str:0000000000000761 .LASF120
     /tmp/cc37cDCn.s:3643   .debug_str:0000000000000132 .LASF122
     /tmp/cc37cDCn.s:49     .text:0000000000000020 .LFB34
     /tmp/cc37cDCn.s:666    .text:000000000000041c .LFE34
     /tmp/cc37cDCn.s:3609   .debug_str:000000000000003b .LASF123
     /tmp/cc37cDCn.s:3405   .debug_loc:0000000000000000 .LLST0
     /tmp/cc37cDCn.s:149    .text:00000000000000b8 .LBB49
     /tmp/cc37cDCn.s:533    .text:000000000000039c .LBE49
     /tmp/cc37cDCn.s:3759   .debug_str:000000000000059a .LASF124
     /tmp/cc37cDCn.s:3791   .debug_str:0000000000000666 .LASF125
     /tmp/cc37cDCn.s:3430   .debug_loc:0000000000000071 .LLST5
     /tmp/cc37cDCn.s:3457   .debug_loc:00000000000000f3 .LLST6
     /tmp/cc37cDCn.s:3464   .debug_loc:0000000000000116 .LLST7
     /tmp/cc37cDCn.s:3471   .debug_loc:0000000000000139 .LLST8
     /tmp/cc37cDCn.s:3478   .debug_loc:000000000000015c .LLST9
     /tmp/cc37cDCn.s:3485   .debug_loc:000000000000017f .LLST10
     /tmp/cc37cDCn.s:3492   .debug_loc:00000000000001a2 .LLST11
     /tmp/cc37cDCn.s:3499   .debug_loc:00000000000001c5 .LLST12
     /tmp/cc37cDCn.s:3506   .debug_loc:00000000000001e8 .LLST13
     /tmp/cc37cDCn.s:151    .text:00000000000000b8 .LBB50
     /tmp/cc37cDCn.s:166    .text:00000000000000c4 .LBE50
     /tmp/cc37cDCn.s:152    .text:00000000000000b8 .LBB51
     /tmp/cc37cDCn.s:165    .text:00000000000000c4 .LBE51
     /tmp/cc37cDCn.s:172    .text:00000000000000cc .LBB52
     /tmp/cc37cDCn.s:187    .text:00000000000000d8 .LBE52
     /tmp/cc37cDCn.s:173    .text:00000000000000cc .LBB53
     /tmp/cc37cDCn.s:186    .text:00000000000000d8 .LBE53
     /tmp/cc37cDCn.s:462    .text:0000000000000340 .LBB54
     /tmp/cc37cDCn.s:473    .text:0000000000000344 .LBE54
     /tmp/cc37cDCn.s:3541   .debug_loc:0000000000000281 .LLST14
     /tmp/cc37cDCn.s:478    .text:0000000000000348 .LBB56
     /tmp/cc37cDCn.s:491    .text:0000000000000350 .LBE56
     /tmp/cc37cDCn.s:3548   .debug_loc:00000000000002a4 .LLST15
     /tmp/cc37cDCn.s:245    .text:000000000000010c .LVL11
     /tmp/cc37cDCn.s:250    .text:000000000000011c .LVL12
     /tmp/cc37cDCn.s:255    .text:000000000000012c .LVL13
GAS LISTING /tmp/cc37cDCn.s 			page 32


     /tmp/cc37cDCn.s:260    .text:0000000000000138 .LVL14
     /tmp/cc37cDCn.s:265    .text:0000000000000148 .LVL15
     /tmp/cc37cDCn.s:270    .text:0000000000000158 .LVL16
     /tmp/cc37cDCn.s:275    .text:0000000000000164 .LVL17
     /tmp/cc37cDCn.s:280    .text:0000000000000174 .LVL18
     /tmp/cc37cDCn.s:285    .text:0000000000000184 .LVL19
     /tmp/cc37cDCn.s:290    .text:0000000000000190 .LVL20
     /tmp/cc37cDCn.s:295    .text:00000000000001a0 .LVL21
     /tmp/cc37cDCn.s:300    .text:00000000000001b0 .LVL22
     /tmp/cc37cDCn.s:305    .text:00000000000001bc .LVL23
     /tmp/cc37cDCn.s:310    .text:00000000000001cc .LVL24
     /tmp/cc37cDCn.s:315    .text:00000000000001dc .LVL25
     /tmp/cc37cDCn.s:320    .text:00000000000001e8 .LVL26
     /tmp/cc37cDCn.s:325    .text:00000000000001f8 .LVL27
     /tmp/cc37cDCn.s:330    .text:0000000000000208 .LVL28
     /tmp/cc37cDCn.s:335    .text:0000000000000214 .LVL29
     /tmp/cc37cDCn.s:340    .text:0000000000000224 .LVL30
     /tmp/cc37cDCn.s:345    .text:0000000000000234 .LVL31
     /tmp/cc37cDCn.s:350    .text:0000000000000240 .LVL32
     /tmp/cc37cDCn.s:355    .text:0000000000000250 .LVL33
     /tmp/cc37cDCn.s:360    .text:0000000000000260 .LVL34
     /tmp/cc37cDCn.s:365    .text:000000000000026c .LVL35
     /tmp/cc37cDCn.s:370    .text:000000000000027c .LVL36
     /tmp/cc37cDCn.s:375    .text:000000000000028c .LVL37
     /tmp/cc37cDCn.s:389    .text:00000000000002b0 .LVL38
     /tmp/cc37cDCn.s:391    .text:00000000000002b8 .LVL39
     /tmp/cc37cDCn.s:408    .text:00000000000002d8 .LVL42
     /tmp/cc37cDCn.s:412    .text:00000000000002e0 .LVL43
     /tmp/cc37cDCn.s:415    .text:00000000000002ec .LVL44
     /tmp/cc37cDCn.s:442    .text:0000000000000310 .LVL48
     /tmp/cc37cDCn.s:447    .text:000000000000031c .LVL49
     /tmp/cc37cDCn.s:452    .text:000000000000032c .LVL50
     /tmp/cc37cDCn.s:457    .text:000000000000033c .LVL51
     /tmp/cc37cDCn.s:503    .text:0000000000000368 .LVL58
     /tmp/cc37cDCn.s:507    .text:0000000000000370 .LVL59
     /tmp/cc37cDCn.s:510    .text:000000000000037c .LVL60
     /tmp/cc37cDCn.s:522    .text:000000000000038c .LVL63
     /tmp/cc37cDCn.s:524    .text:0000000000000394 .LVL64
     /tmp/cc37cDCn.s:574    .text:00000000000003cc .LBB40
     /tmp/cc37cDCn.s:654    .text:0000000000000410 .LBE40
     /tmp/cc37cDCn.s:576    .text:00000000000003cc .LBB41
     /tmp/cc37cDCn.s:591    .text:00000000000003d8 .LBE41
     /tmp/cc37cDCn.s:577    .text:00000000000003cc .LBB42
     /tmp/cc37cDCn.s:590    .text:00000000000003d8 .LBE42
     /tmp/cc37cDCn.s:595    .text:00000000000003dc .LBB43
     /tmp/cc37cDCn.s:610    .text:00000000000003e8 .LBE43
     /tmp/cc37cDCn.s:596    .text:00000000000003dc .LBB44
     /tmp/cc37cDCn.s:609    .text:00000000000003e8 .LBE44
     /tmp/cc37cDCn.s:624    .text:0000000000000400 .LBB45
     /tmp/cc37cDCn.s:635    .text:0000000000000404 .LBE45
     /tmp/cc37cDCn.s:3555   .debug_loc:00000000000002c7 .LLST3
     /tmp/cc37cDCn.s:640    .text:0000000000000408 .LBB47
     /tmp/cc37cDCn.s:653    .text:0000000000000410 .LBE47
     /tmp/cc37cDCn.s:3562   .debug_loc:00000000000002ea .LLST4
     /tmp/cc37cDCn.s:619    .text:00000000000003fc .LVL71
     /tmp/cc37cDCn.s:77     .text:0000000000000050 .LBB30
     /tmp/cc37cDCn.s:94     .text:000000000000005c .LBE30
GAS LISTING /tmp/cc37cDCn.s 			page 33


     /tmp/cc37cDCn.s:78     .text:0000000000000050 .LBB31
     /tmp/cc37cDCn.s:93     .text:000000000000005c .LBE31
     /tmp/cc37cDCn.s:537    .text:000000000000039c .LBB35
     /tmp/cc37cDCn.s:549    .text:00000000000003a4 .LBE35
     /tmp/cc37cDCn.s:3569   .debug_loc:000000000000030d .LLST1
     /tmp/cc37cDCn.s:563    .text:00000000000003c4 .LBB38
     /tmp/cc37cDCn.s:571    .text:00000000000003c8 .LBE38
     /tmp/cc37cDCn.s:3577   .debug_loc:0000000000000331 .LLST2
     /tmp/cc37cDCn.s:660    .text:0000000000000418 .LVL76
     /tmp/cc37cDCn.s:13     .text:0000000000000000 .LFB33
     /tmp/cc37cDCn.s:43     .text:0000000000000020 .LFE33
     /tmp/cc37cDCn.s:3865   .debug_str:00000000000008a4 .LASF140
     /tmp/cc37cDCn.s:3639   .debug_str:000000000000011d .LASF126
     /tmp/cc37cDCn.s:3819   .debug_str:000000000000071a .LASF127
     /tmp/cc37cDCn.s:3741   .debug_str:0000000000000534 .LASF129
     /tmp/cc37cDCn.s:3839   .debug_str:00000000000007af .LASF128
     /tmp/cc37cDCn.s:3655   .debug_str:00000000000001be .LASF130
     /tmp/cc37cDCn.s:92     .text:000000000000005c .LVL0
     /tmp/cc37cDCn.s:115    .text:0000000000000088 .LVL1
     /tmp/cc37cDCn.s:145    .text:00000000000000b8 .LVL2
     /tmp/cc37cDCn.s:531    .text:000000000000039c .LVL66
     /tmp/cc37cDCn.s:553    .text:00000000000003ac .LVL68
     /tmp/cc37cDCn.s:650    .text:0000000000000410 .LVL75
     /tmp/cc37cDCn.s:197    .text:00000000000000e0 .LVL3
     /tmp/cc37cDCn.s:395    .text:00000000000002bc .LVL40
     /tmp/cc37cDCn.s:398    .text:00000000000002c0 .LVL41
     /tmp/cc37cDCn.s:417    .text:00000000000002f0 .LVL45
     /tmp/cc37cDCn.s:420    .text:00000000000002f4 .LVL46
     /tmp/cc37cDCn.s:424    .text:00000000000002f8 .LVL47
     /tmp/cc37cDCn.s:488    .text:0000000000000350 .LVL55
     /tmp/cc37cDCn.s:494    .text:0000000000000354 .LVL56
     /tmp/cc37cDCn.s:496    .text:0000000000000358 .LVL57
     /tmp/cc37cDCn.s:513    .text:0000000000000380 .LVL61
     /tmp/cc37cDCn.s:516    .text:0000000000000384 .LVL62
     /tmp/cc37cDCn.s:528    .text:0000000000000398 .LVL65
     /tmp/cc37cDCn.s:203    .text:00000000000000e4 .LVL4
     /tmp/cc37cDCn.s:209    .text:00000000000000e8 .LVL5
     /tmp/cc37cDCn.s:215    .text:00000000000000ec .LVL6
     /tmp/cc37cDCn.s:221    .text:00000000000000f0 .LVL7
     /tmp/cc37cDCn.s:227    .text:00000000000000f4 .LVL8
     /tmp/cc37cDCn.s:233    .text:00000000000000f8 .LVL9
     /tmp/cc37cDCn.s:239    .text:00000000000000fc .LVL10
     /tmp/cc37cDCn.s:461    .text:0000000000000340 .LVL52
     /tmp/cc37cDCn.s:470    .text:0000000000000344 .LVL53
     /tmp/cc37cDCn.s:477    .text:0000000000000348 .LVL54
     /tmp/cc37cDCn.s:623    .text:0000000000000400 .LVL72
     /tmp/cc37cDCn.s:632    .text:0000000000000404 .LVL73
     /tmp/cc37cDCn.s:639    .text:0000000000000408 .LVL74
     /tmp/cc37cDCn.s:546    .text:00000000000003a4 .LVL67
     /tmp/cc37cDCn.s:562    .text:00000000000003c4 .LVL69
     /tmp/cc37cDCn.s:569    .text:00000000000003c8 .LVL70
     /tmp/cc37cDCn.s:719    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z11debug_printPKc
_Z11debug_printm
_ZN15MemoryAllocator11getInstanceEv
GAS LISTING /tmp/cc37cDCn.s 			page 34


_ZN15MemoryAllocator26mem_get_largest_free_blockEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN15MemoryAllocator18mem_get_free_spaceEv
_ZN3TCB16timeSliceCounterE
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
console_handler
